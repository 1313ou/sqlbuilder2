annosets.table=fnannosets
annosets.create=CREATE TABLE IF NOT EXISTS %Fn_annosets.table% ( annosetid INTEGER NOT NULL,sentenceid INTEGER NOT NULL,frameid INTEGER DEFAULT NULL,luid INTEGER DEFAULT NULL,cxnid INTEGER DEFAULT NULL,statusid INTEGER DEFAULT NULL,cdate VARCHAR(27),noccurs INTEGER DEFAULT 1,PRIMARY KEY (annosetid) );
annosets.altcreate1=ALTER TABLE %Fn_annosets.table% ADD COLUMN cxn VARCHAR(32) AFTER cxnid;
annosets.altcreate2=ALTER TABLE %Fn_annosets.table% ADD COLUMN status VARCHAR(32) AFTER statusid;
annosets.index1=CREATE INDEX IF NOT EXISTS k_%Fn_annosets.table%_frameid ON %Fn_annosets.table% (frameid);
annosets.no-index1=DROP INDEX IF EXISTS k_%Fn_annosets.table%_frameid;
annosets.index2=CREATE INDEX IF NOT EXISTS k_%Fn_annosets.table%_luid ON %Fn_annosets.table% (luid);
annosets.no-index2=DROP INDEX IF EXISTS k_%Fn_annosets.table%_luid;
annosets.fk1=ALTER TABLE %Fn_annosets.table% ADD CONSTRAINT fk_%Fn_annosets.table%_sentenceid FOREIGN KEY (sentenceid) REFERENCES %Fn_sentences.table% (sentenceid);
annosets.fk2=ALTER TABLE %Fn_annosets.table% ADD CONSTRAINT fk_%Fn_annosets.table%_frameid FOREIGN KEY (frameid) REFERENCES %Fn_frames.table% (frameid);
annosets.fk3=ALTER TABLE %Fn_annosets.table% ADD CONSTRAINT fk_%Fn_annosets.table%_luid FOREIGN KEY (luid) REFERENCES %Fn_lexunits.table% (luid);
annosets.fk4=ALTER TABLE %Fn_annosets.table% ADD CONSTRAINT fk_%Fn_annosets.table%_cxnid FOREIGN KEY (cxnid) REFERENCES %Fn_cxns.table% (cxnid);
annosets.no-fk1=ALTER TABLE %Fn_annosets.table% DROP CONSTRAINT fk_%Fn_annosets.table%_sentenceid CASCADE;
annosets.no-fk2=ALTER TABLE %Fn_annosets.table% DROP CONSTRAINT fk_%Fn_annosets.table%_frameid CASCADE;
annosets.no-fk3=ALTER TABLE %Fn_annosets.table% DROP CONSTRAINT fk_%Fn_annosets.table%_luid CASCADE;
annosets.no-fk4=ALTER TABLE %Fn_annosets.table% DROP CONSTRAINT fk_%Fn_annosets.table%_cxnid CASCADE;
annosets.insert=INSERT INTO %Fn_annosets.table% (annosetid,sentenceid,frameid,luid,cxnid,cxn,status,cdate) VALUES(?,?,?,?,?,?,?,?) ON DUPLICATE KEY UPDATE noccurs=noccurs+1;

coretypes.table=fncoretypes
coretypes.create=CREATE TABLE IF NOT EXISTS %Fn_coretypes.table% ( coretypeid INTEGER NOT NULL AUTO_INCREMENT,coretype VARCHAR(16),PRIMARY KEY (coretypeid) );
coretypes.unq1=CREATE UNIQUE INDEX IF NOT EXISTS unq_%Fn_coretypes.table%_coretype ON %Fn_coretypes.table% (coretype);
coretypes.no-unq1=DROP INDEX IF EXISTS unq_%Fn_coretypes.table%_coretype;
coretypes.insert=INSERT INTO %Fn_coretypes.table% (coretype) VALUES(?);

corpuses.table=fncorpuses
corpuses.create=CREATE TABLE IF NOT EXISTS %Fn_corpuses.table% ( corpusid INTEGER NOT NULL,corpus VARCHAR(80),corpusdesc VARCHAR(96),luid INTEGER DEFAULT NULL,noccurs INTEGER DEFAULT 1,PRIMARY KEY (corpusid) );
corpuses.fk1=ALTER TABLE %Fn_corpuses.table% ADD CONSTRAINT fk_%Fn_corpuses.table%_luid FOREIGN KEY (luid) REFERENCES %Fn_lexunits.table% (luid);
corpuses.no-fk1=ALTER TABLE %Fn_corpuses.table% DROP CONSTRAINT fk_%Fn_corpuses.table%_luid CASCADE;
corpuses.insert=INSERT INTO %Fn_corpuses.table% (corpusid,corpus,corpusdesc,luid) VALUES(?,?,?,?) ON DUPLICATE KEY UPDATE noccurs=noccurs+1;

cxns.table=fncxns
cxns.create=CREATE TABLE IF NOT EXISTS %Fn_cxns.table% ( cxnid INTEGER NOT NULL,cxn VARCHAR(32),PRIMARY KEY (cxnid) );

documents.table=fndocuments
documents.create=CREATE TABLE IF NOT EXISTS %Fn_documents.table% ( documentid INTEGER NOT NULL,corpusid INTEGER DEFAULT NULL,documentdesc VARCHAR(84),noccurs INTEGER DEFAULT 1,PRIMARY KEY (documentid) );
documents.fk1=ALTER TABLE %Fn_documents.table% ADD CONSTRAINT fk_%Fn_documents.table%_corpusid FOREIGN KEY (corpusid) REFERENCES %Fn_corpuses.table% (corpusid);
documents.no-fk1=ALTER TABLE %Fn_documents.table% DROP CONSTRAINT fk_%Fn_documents.table%_corpusid CASCADE;
documents.insert=INSERT INTO %Fn_documents.table% (documentid,corpusid,documentdesc) VALUES(?,?,?) ON DUPLICATE KEY UPDATE noccurs=noccurs+1;

fegrouprealizations.table=fnfegrouprealizations
fegrouprealizations.create=CREATE TABLE IF NOT EXISTS %Fn_fegrouprealizations.table% ( fegrid INTEGER NOT NULL,luid INTEGER,total INTEGER,PRIMARY KEY (fegrid) );
fegrouprealizations.fk1=ALTER TABLE %Fn_fegrouprealizations.table% ADD CONSTRAINT fk_%Fn_fegrouprealizations.table%_luid FOREIGN KEY (luid) REFERENCES %Fn_lexunits.table% (luid);
fegrouprealizations.no-fk1=ALTER TABLE %Fn_fegrouprealizations.table% DROP CONSTRAINT fk_%Fn_fegrouprealizations.table%_luid CASCADE;
fegrouprealizations.insert=INSERT INTO %Fn_fegrouprealizations.table% (fegrid,luid,total) VALUES(?,?,?);

ferealizations.table=fnferealizations
ferealizations.create=CREATE TABLE IF NOT EXISTS %Fn_ferealizations.table% ( ferid INTEGER NOT NULL,luid INTEGER,fetypeid INTEGER DEFAULT NULL,feid INTEGER DEFAULT NULL,total INTEGER,PRIMARY KEY (ferid) );
ferealizations.altcreate1=ALTER TABLE %Fn_ferealizations.table% ADD COLUMN fetype VARCHAR(30) AFTER fetypeid;
ferealizations.fk1=ALTER TABLE %Fn_ferealizations.table% ADD CONSTRAINT fk_%Fn_ferealizations.table%_luid FOREIGN KEY (luid) REFERENCES %Fn_lexunits.table% (luid);
ferealizations.fk2=ALTER TABLE %Fn_ferealizations.table% ADD CONSTRAINT fk_%Fn_ferealizations.table%_fetypeid FOREIGN KEY (fetypeid) REFERENCES %Fn_fetypes.table% (fetypeid);
ferealizations.no-fk1=ALTER TABLE %Fn_ferealizations.table% DROP CONSTRAINT fk_%Fn_ferealizations.table%_fetypeid CASCADE;
ferealizations.no-fk2=ALTER TABLE %Fn_ferealizations.table% DROP CONSTRAINT fk_%Fn_ferealizations.table%_luid CASCADE;
ferealizations.insert=INSERT INTO %Fn_ferealizations.table% (ferid,luid,fetype,total) VALUES(?,?,?,?);

fegrouprealizations_fes.table=fnfegrouprealizations_fes
fegrouprealizations_fes.create=CREATE TABLE IF NOT EXISTS %Fn_fegrouprealizations_fes.table% ( rfeid INTEGER,fegrid INTEGER NOT NULL,feid INTEGER DEFAULT NULL,fetypeid INTEGER DEFAULT NULL,PRIMARY KEY (rfeid) );
fegrouprealizations_fes.altcreate1=ALTER TABLE %Fn_fegrouprealizations_fes.table% ADD COLUMN fetype VARCHAR(30) AFTER fetypeid;
fegrouprealizations_fes.fk1=ALTER TABLE %Fn_fegrouprealizations_fes.table% ADD CONSTRAINT fk_%Fn_fegrouprealizations_fes.table%_fegrid FOREIGN KEY (fegrid) REFERENCES %Fn_fegrouprealizations.table% (fegrid);
fegrouprealizations_fes.fk2=ALTER TABLE %Fn_fegrouprealizations_fes.table% ADD CONSTRAINT fk_%Fn_fegrouprealizations_fes.table%_fetypeid FOREIGN KEY (fetypeid) REFERENCES %Fn_fetypes.table% (fetypeid);
fegrouprealizations_fes.fk3=ALTER TABLE %Fn_fegrouprealizations_fes.table% ADD CONSTRAINT fk_%Fn_fegrouprealizations_fes.table%_feid FOREIGN KEY (feid) REFERENCES %Fn_fes.table% (feid);
fegrouprealizations_fes.no-fk1=ALTER TABLE %Fn_fegrouprealizations_fes.table% DROP CONSTRAINT fk_%Fn_fegrouprealizations_fes.table%_fegrid CASCADE;
fegrouprealizations_fes.no-fk2=ALTER TABLE %Fn_fegrouprealizations_fes.table% DROP CONSTRAINT fk_%Fn_fegrouprealizations_fes.table%_fetypeid CASCADE;
fegrouprealizations_fes.no-fk3=ALTER TABLE %Fn_fegrouprealizations_fes.table% DROP CONSTRAINT fk_%Fn_fegrouprealizations_fes.table%_feid CASCADE;
fegrouprealizations_fes.insert=INSERT INTO %Fn_fegrouprealizations_fes.table% (rfeid,fegrid,fetype) VALUES(?,?,?);

fes.table=fnfes
fes.create=CREATE TABLE IF NOT EXISTS %Fn_fes.table% ( feid INTEGER NOT NULL,frameid INTEGER,fetypeid INTEGER DEFAULT NULL,feabbrev VARCHAR(24),fedefinition TEXT,coretypeid INTEGER DEFAULT NULL,coreset INTEGER DEFAULT NULL,fgcolor VARCHAR(6),bgcolor VARCHAR(6),cdate VARCHAR(27),cby VARCHAR(5),PRIMARY KEY (feid) );
fes.altcreate1=ALTER TABLE %Fn_fes.table% ADD COLUMN fetype VARCHAR(30) AFTER fetypeid;
fes.index1=CREATE INDEX IF NOT EXISTS k_%Fn_fes.table%_frameid ON %Fn_fes.table% (frameid);
fes.no-index1=DROP INDEX IF EXISTS k_%Fn_fes.table%_frameid;
fes.index2=CREATE INDEX IF NOT EXISTS k_%Fn_fes.table%_fetypeid ON %Fn_fes.table% (fetypeid);
fes.no-index2=DROP INDEX IF EXISTS k_%Fn_fes.table%_fetypeid;
fes.fk1=ALTER TABLE %Fn_fes.table% ADD CONSTRAINT fk_%Fn_fes.table%_frameid FOREIGN KEY (frameid) REFERENCES %Fn_frames.table% (frameid);
fes.fk2=ALTER TABLE %Fn_fes.table% ADD CONSTRAINT fk_%Fn_fes.table%_fetypeid FOREIGN KEY (fetypeid) REFERENCES %Fn_fetypes.table% (fetypeid);
fes.fk3=ALTER TABLE %Fn_fes.table% ADD CONSTRAINT fk_%Fn_fes.table%_coretypeid FOREIGN KEY (coretypeid) REFERENCES %Fn_coretypes.table% (coretypeid);
fes.no-fk1=ALTER TABLE %Fn_fes.table% DROP CONSTRAINT fk_%Fn_fes.table%_coretypeid CASCADE;
fes.no-fk2=ALTER TABLE %Fn_fes.table% DROP CONSTRAINT fk_%Fn_fes.table%_fetypeid CASCADE;
fes.no-fk3=ALTER TABLE %Fn_fes.table% DROP CONSTRAINT fk_%Fn_fes.table%_frameid CASCADE;
fes.insert=INSERT INTO %Fn_fes.table% (feid,frameid,fetype,feabbrev,fedefinition,coretypeid,coreset,fgcolor,bgcolor,cdate,cby) VALUES(?,?,?,?,?,?,?,?,?,?,?);

fes_excluded.table=fnfes_excluded
fes_excluded.create=CREATE TABLE IF NOT EXISTS %Fn_fes_excluded.table% ( feid INTEGER NOT NULL,fe2id INTEGER NOT NULL,PRIMARY KEY (feid,fe2id) );
fes_excluded.fk1=ALTER TABLE %Fn_fes_excluded.table% ADD CONSTRAINT fk_%Fn_fes_excluded.table%_feid FOREIGN KEY (feid) REFERENCES %Fn_fes.table% (feid);
fes_excluded.fk2=ALTER TABLE %Fn_fes_excluded.table% ADD CONSTRAINT fk_%Fn_fes_excluded.table%_fe2id FOREIGN KEY (fe2id) REFERENCES %Fn_fes.table% (feid);
fes_excluded.no-fk1=ALTER TABLE %Fn_fes_excluded.table% DROP CONSTRAINT fk_%Fn_fes_excluded.table%_fe2id CASCADE;
fes_excluded.no-fk2=ALTER TABLE %Fn_fes_excluded.table% DROP CONSTRAINT fk_%Fn_fes_excluded.table%_feid CASCADE;
fes_excluded.insert=INSERT INTO %Fn_fes_excluded.table% (feid,fe2id) VALUES(?,?);

fes_required.table=fnfes_required
fes_required.create=CREATE TABLE IF NOT EXISTS %Fn_fes_required.table% ( feid INTEGER NOT NULL,fe2id INTEGER NOT NULL,PRIMARY KEY (feid,fe2id) );
fes_required.fk1=ALTER TABLE %Fn_fes_required.table% ADD CONSTRAINT fk_%Fn_fes_required.table%_feid FOREIGN KEY (feid) REFERENCES %Fn_fes.table% (feid);
fes_required.fk2=ALTER TABLE %Fn_fes_required.table% ADD CONSTRAINT fk_%Fn_fes_required.table%_fe2id FOREIGN KEY (fe2id) REFERENCES %Fn_fes.table% (feid);
fes_required.no-fk1=ALTER TABLE %Fn_fes_required.table% DROP CONSTRAINT fk_%Fn_fes_required.table%_fe2id CASCADE;
fes_required.no-fk2=ALTER TABLE %Fn_fes_required.table% DROP CONSTRAINT fk_%Fn_fes_required.table%_feid CASCADE;
fes_required.insert=INSERT INTO %Fn_fes_required.table% (feid,fe2id) VALUES(?,?);

fes_semtypes.table=fnfes_semtypes
fes_semtypes.create=CREATE TABLE IF NOT EXISTS %Fn_fes_semtypes.table% ( feid INTEGER NOT NULL,semtypeid INTEGER NOT NULL,PRIMARY KEY (feid,semtypeid) );
fes_semtypes.fk1=ALTER TABLE %Fn_fes_semtypes.table% ADD CONSTRAINT fk_%Fn_fes_semtypes.table%_feid FOREIGN KEY (feid) REFERENCES %Fn_fes.table% (feid);
fes_semtypes.fk2=ALTER TABLE %Fn_fes_semtypes.table% ADD CONSTRAINT fk_%Fn_fes_semtypes.table%_semtypeid FOREIGN KEY (semtypeid) REFERENCES %Fn_semtypes.table% (semtypeid);
fes_semtypes.no-fk1=ALTER TABLE %Fn_fes_semtypes.table% DROP CONSTRAINT fk_%Fn_fes_semtypes.table%_feid CASCADE;
fes_semtypes.no-fk2=ALTER TABLE %Fn_fes_semtypes.table% DROP CONSTRAINT fk_%Fn_fes_semtypes.table%_semtypeid CASCADE;
fes_semtypes.insert=INSERT INTO %Fn_fes_semtypes.table% (feid,semtypeid) VALUES(?,?);

fetypes.table=fnfetypes
fetypes.create=CREATE TABLE IF NOT EXISTS %Fn_fetypes.table% ( fetypeid INTEGER NOT NULL AUTO_INCREMENT,fetype VARCHAR(30),PRIMARY KEY (fetypeid) );
fetypes.unq1=CREATE UNIQUE INDEX IF NOT EXISTS unq_%Fn_fetypes.table%_fetype ON %Fn_fetypes.table% (fetype);
fetypes.no-unq1=DROP INDEX IF EXISTS unq_%Fn_fetypes.table%_fetype;

framerelations.table=fnframerelations
framerelations.create=CREATE TABLE IF NOT EXISTS %Fn_framerelations.table% ( relationid INTEGER NOT NULL AUTO_INCREMENT,relation VARCHAR(20) DEFAULT NULL,PRIMARY KEY (relationid) );
framerelations.unq1=CREATE UNIQUE INDEX IF NOT EXISTS unq_%Fn_framerelations.table%_relation ON %Fn_framerelations.table% (relation);
framerelations.no-unq1=DROP INDEX IF EXISTS unq_%Fn_framerelations.table%_relation;

frames.table=fnframes
frames.create=CREATE TABLE IF NOT EXISTS %Fn_frames.table% ( frameid INTEGER NOT NULL,frame VARCHAR(40),framedefinition TEXT,cdate VARCHAR(27),cby VARCHAR(5),PRIMARY KEY (frameid) );
frames.insert=INSERT INTO %Fn_frames.table% (frameid,frame,framedefinition,cdate,cby) VALUES(?,?,?,?,?);

frames_corefes.table=fnframes_corefes
frames_corefes.create=CREATE TABLE IF NOT EXISTS %Fn_frames_corefes.table% ( frameid INTEGER NOT NULL,feid INTEGER NOT NULL,PRIMARY KEY (frameid,feid) );
frames_corefes.fk1=ALTER TABLE %Fn_frames_corefes.table% ADD CONSTRAINT fk_%Fn_frames_corefes.table%_frameid FOREIGN KEY (frameid) REFERENCES %Fn_frames.table% (frameid);
frames_corefes.fk2=ALTER TABLE %Fn_frames_corefes.table% ADD CONSTRAINT fk_%Fn_frames_corefes.table%_feid FOREIGN KEY (feid) REFERENCES %Fn_fes.table% (feid);
frames_corefes.no-fk1=ALTER TABLE %Fn_frames_corefes.table% DROP CONSTRAINT fk_%Fn_frames_corefes.table%_feid CASCADE;
frames_corefes.no-fk2=ALTER TABLE %Fn_frames_corefes.table% DROP CONSTRAINT fk_%Fn_frames_corefes.table%_frameid CASCADE;
frames_corefes.insert=INSERT INTO %Fn_frames_corefes.table% (frameid,feid) VALUES(?,?);

frames_related.table=fnframes_related
frames_related.create=CREATE TABLE IF NOT EXISTS %Fn_frames_related.table% ( frameid INTEGER NOT NULL,frame2id INTEGER NOT NULL,relationid INTEGER NOT NULL );
frames_related.altcreate1=ALTER TABLE %Fn_frames_related.table% ADD COLUMN frame2 VARCHAR(40) AFTER frame2id;
frames_related.altcreate2=ALTER TABLE %Fn_frames_related.table% ADD COLUMN relation VARCHAR(40) AFTER relationid;
frames_related.pk=ALTER TABLE %Fn_frames_related.table% ADD CONSTRAINT pk_%Fn_frames_related.table% PRIMARY KEY (frameid,frame2id,relationid);
frames_related.no-pk=ALTER TABLE %Fn_frames_related.table% DROP PRIMARY KEY;
frames_related.fk1=ALTER TABLE %Fn_frames_related.table% ADD CONSTRAINT fk_%Fn_frames_related.table%_frameid FOREIGN KEY (frameid) REFERENCES %Fn_frames.table% (frameid);
frames_related.fk2=ALTER TABLE %Fn_frames_related.table% ADD CONSTRAINT fk_%Fn_frames_related.table%_frame2id FOREIGN KEY (frame2id) REFERENCES %Fn_frames.table% (frameid);
frames_related.fk3=ALTER TABLE %Fn_frames_related.table% ADD CONSTRAINT fk_%Fn_frames_related.table%_relationid FOREIGN KEY (relationid) REFERENCES %Fn_framerelations.table% (relationid);
frames_related.no-fk1=ALTER TABLE %Fn_frames_related.table% DROP CONSTRAINT fk_%Fn_frames_related.table%_frame2id CASCADE;
frames_related.no-fk2=ALTER TABLE %Fn_frames_related.table% DROP CONSTRAINT fk_%Fn_frames_related.table%_frameid CASCADE;
frames_related.no-fk3=ALTER TABLE %Fn_frames_related.table% DROP CONSTRAINT fk_%Fn_frames_related.table%_relationid CASCADE;
frames_related.insert=INSERT INTO %Fn_frames_related.table% (frameid,frame2id,frame2,relationid,relation) VALUES(?,-1,?,-1,?);

frames_semtypes.table=fnframes_semtypes
frames_semtypes.create=CREATE TABLE IF NOT EXISTS %Fn_frames_semtypes.table% ( frameid INTEGER NOT NULL,semtypeid INTEGER NOT NULL,PRIMARY KEY (frameid,semtypeid) );
frames_semtypes.fk1=ALTER TABLE %Fn_frames_semtypes.table% ADD CONSTRAINT fk_%Fn_frames_semtypes.table%_frameid FOREIGN KEY (frameid) REFERENCES %Fn_frames.table% (frameid);
frames_semtypes.fk2=ALTER TABLE %Fn_frames_semtypes.table% ADD CONSTRAINT fk_%Fn_frames_semtypes.table%_semtypeid FOREIGN KEY (semtypeid) REFERENCES %Fn_semtypes.table% (semtypeid);
frames_semtypes.no-fk1=ALTER TABLE %Fn_frames_semtypes.table% DROP CONSTRAINT fk_%Fn_frames_semtypes.table%_frameid CASCADE;
frames_semtypes.no-fk2=ALTER TABLE %Fn_frames_semtypes.table% DROP CONSTRAINT fk_%Fn_frames_semtypes.table%_semtypeid CASCADE;
frames_semtypes.insert=INSERT INTO %Fn_frames_semtypes.table% (frameid,semtypeid) VALUES(?,?);

gftypes.table=fngftypes
gftypes.create=CREATE TABLE IF NOT EXISTS %Fn_gftypes.table% ( gfid INTEGER NOT NULL AUTO_INCREMENT,gf VARCHAR(10),PRIMARY KEY (gfid) );
gftypes.unq1=CREATE UNIQUE INDEX IF NOT EXISTS unq_%Fn_gftypes.table%_gf ON %Fn_gftypes.table% (gf);
gftypes.no-unq1=DROP INDEX IF EXISTS unq_%Fn_gftypes.table%_gf;

governors.table=fngovernors
governors.create=CREATE TABLE IF NOT EXISTS %Fn_governors.table% ( governorid INTEGER NOT NULL,fnwordid INTEGER DEFAULT NULL,governortype VARCHAR(5),PRIMARY KEY (governorid) );
governors.fk1=ALTER TABLE %Fn_governors.table% ADD CONSTRAINT fk_%Fn_governors.table%_fnwordid FOREIGN KEY (fnwordid) REFERENCES %Fn_words.table% (fnwordid);
governors.no-fk1=ALTER TABLE %Fn_governors.table% DROP CONSTRAINT fk_%Fn_governors.table%_fnwordid CASCADE;
governors.insert=INSERT INTO %Fn_governors.table% (governorid,fnwordid,governortype) VALUES(?,?,?);

governors_annosets.table=fngovernors_annosets
governors_annosets.create=CREATE TABLE IF NOT EXISTS %Fn_governors_annosets.table% ( governorid INTEGER NOT NULL,annosetid INTEGER NOT NULL,PRIMARY KEY (governorid,annosetid) );
governors_annosets.fk1=ALTER TABLE %Fn_governors_annosets.table% ADD CONSTRAINT fk_%Fn_governors_annosets.table%_governorid FOREIGN KEY (governorid) REFERENCES %Fn_governors.table% (governorid);
governors_annosets.fk2=ALTER TABLE %Fn_governors_annosets.table% ADD CONSTRAINT fk_%Fn_governors_annosets.table%_annosetid FOREIGN KEY (annosetid) REFERENCES %Fn_annosets.table% (annosetid);
governors_annosets.no-fk1=ALTER TABLE %Fn_governors_annosets.table% DROP CONSTRAINT fk_%Fn_governors_annosets.table%_annosetid CASCADE;
governors_annosets.no-fk2=ALTER TABLE %Fn_governors_annosets.table% DROP CONSTRAINT fk_%Fn_governors_annosets.table%_governorid CASCADE;
governors_annosets.insert=INSERT INTO %Fn_governors_annosets.table% (governorid,annosetid) VALUES(?,?);

labels.table=fnlabels
labels.create=CREATE TABLE IF NOT EXISTS %Fn_labels.table% ( labelid INTEGER NOT NULL,layerid INTEGER,labeltypeid INTEGER DEFAULT NULL,labelitypeid INTEGER DEFAULT NULL,feid INTEGER DEFAULT NULL,start INTEGER DEFAULT NULL,end INTEGER DEFAULT NULL,fgcolor VARCHAR(6),bgcolor VARCHAR(6),cby VARCHAR(27),PRIMARY KEY (labelid) );
labels.altcreate1=ALTER TABLE %Fn_labels.table% ADD COLUMN labeltype VARCHAR(32) AFTER labeltypeid;
labels.fk1=ALTER TABLE %Fn_labels.table% ADD CONSTRAINT fk_%Fn_labels.table%_layerid FOREIGN KEY (layerid) REFERENCES %Fn_layers.table% (layerid);
labels.fk2=ALTER TABLE %Fn_labels.table% ADD CONSTRAINT fk_%Fn_labels.table%_feid FOREIGN KEY (feid) REFERENCES %Fn_fes.table% (feid);
labels.fk3=ALTER TABLE %Fn_labels.table% ADD CONSTRAINT fk_%Fn_labels.table%_labeltypeid FOREIGN KEY (labeltypeid) REFERENCES %Fn_labeltypes.table% (labeltypeid);
labels.fk4=ALTER TABLE %Fn_labels.table% ADD CONSTRAINT fk_%Fn_labels.table%_labelitypeid FOREIGN KEY (labelitypeid) REFERENCES %Fn_labelitypes.table% (labelitypeid);
labels.no-fk1=ALTER TABLE %Fn_labels.table% DROP CONSTRAINT fk_%Fn_labels.table%_layerid CASCADE;
labels.no-fk2=ALTER TABLE %Fn_labels.table% DROP CONSTRAINT fk_%Fn_labels.table%_feid CASCADE;
labels.no-fk3=ALTER TABLE %Fn_labels.table% DROP CONSTRAINT fk_%Fn_labels.table%_labeltypeid CASCADE;
labels.no-fk4=ALTER TABLE %Fn_labels.table% DROP CONSTRAINT fk_%Fn_labels.table%_labelitypeid CASCADE;
labels.insert=INSERT INTO %Fn_labels.table% (labelid,layerid,labeltype,labelitypeid,feid,start,end,fgcolor,bgcolor,cby) VALUES(?,?,?,?,?,?,?,?,?,?);

labeltypes.table=fnlabeltypes
labeltypes.create=CREATE TABLE IF NOT EXISTS %Fn_labeltypes.table% ( labeltypeid INTEGER NOT NULL AUTO_INCREMENT,labeltype VARCHAR(26),PRIMARY KEY (labeltypeid) );
labeltypes.insert=INSERT INTO %Fn_labeltypes.table% (labeltypeid,labeltype) VALUES(?);

labelitypes.table=fnlabelitypes
labelitypes.create=CREATE TABLE IF NOT EXISTS %Fn_labelitypes.table% ( labelitypeid INTEGER NOT NULL AUTO_INCREMENT,labelitype VARCHAR(4),labelitypedescr VARCHAR(16) DEFAULT NULL,PRIMARY KEY (labelitypeid) );
labelitypes.insert=INSERT INTO %Fn_labelitypes.table% (labelitype) VALUES(?);

layers.table=fnlayers
layers.create=CREATE TABLE IF NOT EXISTS %Fn_layers.table% ( layerid INTEGER NOT NULL,annosetid INTEGER NOT NULL,layertypeid INTEGER,`rank` INTEGER,PRIMARY KEY (layerid) );
layers.altcreate1=ALTER TABLE %Fn_layers.table% ADD COLUMN layertype VARCHAR(6) AFTER layertypeid;
layers.fk1=ALTER TABLE %Fn_layers.table% ADD CONSTRAINT fk_%Fn_layers.table%_annosetid FOREIGN KEY (annosetid) REFERENCES %Fn_annosets.table% (annosetid);
layers.fk2=ALTER TABLE %Fn_layers.table% ADD CONSTRAINT fk_%Fn_layers.table%_layertypeid FOREIGN KEY (layertypeid) REFERENCES %Fn_layertypes.table% (layertypeid);
layers.no-fk1=ALTER TABLE %Fn_layers.table% DROP CONSTRAINT fk_%Fn_layers.table%_annosetid CASCADE;
layers.no-fk2=ALTER TABLE %Fn_layers.table% DROP CONSTRAINT fk_%Fn_layers.table%_layertypeid CASCADE;
layers.insert=INSERT INTO %Fn_layers.table% (layerid,annosetid,layertype,`rank`) VALUES(?,?,?,?);

layertypes.table=fnlayertypes
layertypes.create=CREATE TABLE IF NOT EXISTS %Fn_layertypes.table% ( layertypeid INTEGER NOT NULL AUTO_INCREMENT,layertype VARCHAR(6),PRIMARY KEY (layertypeid) );

lexemes.table=fnlexemes
lexemes.create=CREATE TABLE IF NOT EXISTS %Fn_lexemes.table% ( lexemeid INTEGER NOT NULL,luid INTEGER,fnwordid INTEGER,posid INTEGER,breakbefore BOOLEAN,headword BOOLEAN,lexemeidx INTEGER DEFAULT NULL,PRIMARY KEY (lexemeid) );
lexemes.index1=CREATE INDEX IF NOT EXISTS k_%Fn_lexemes.table%_luid ON %Fn_lexemes.table% (luid);
lexemes.no-index1=DROP INDEX IF EXISTS k_%Fn_lexemes.table%_luid;
lexemes.index2=CREATE INDEX IF NOT EXISTS k_%Fn_lexemes.table%_fnwordid ON %Fn_lexemes.table% (fnwordid);
lexemes.no-index2=DROP INDEX IF EXISTS k_%Fn_lexemes.table%_fnwordid;
lexemes.fk1=ALTER TABLE %Fn_lexemes.table% ADD CONSTRAINT fk_%Fn_lexemes.table%_luid FOREIGN KEY (luid) REFERENCES %Fn_lexunits.table% (luid);
lexemes.fk2=ALTER TABLE %Fn_lexemes.table% ADD CONSTRAINT fk_%Fn_lexemes.table%_posid FOREIGN KEY (posid) REFERENCES %Fn_poses.table% (posid);
lexemes.fk3=ALTER TABLE %Fn_lexemes.table% ADD CONSTRAINT fk_%Fn_lexemes.table%_fnwordid FOREIGN KEY (fnwordid) REFERENCES %Fn_words.table% (fnwordid);
lexemes.no-fk1=ALTER TABLE %Fn_lexemes.table% DROP CONSTRAINT fk_%Fn_lexemes.table%_luid CASCADE;
lexemes.no-fk2=ALTER TABLE %Fn_lexemes.table% DROP CONSTRAINT fk_%Fn_lexemes.table%_posid CASCADE;
lexemes.no-fk3=ALTER TABLE %Fn_lexemes.table% DROP CONSTRAINT fk_%Fn_lexemes.table%_fnwordid CASCADE;
lexemes.insert=INSERT INTO %Fn_lexemes.table% (lexemeid,luid,fnwordid,posid,breakbefore,headword,lexemeidx) VALUES(?,?,?,?,?,?,?);

lexunits.table=fnlexunits
lexunits.create=CREATE TABLE IF NOT EXISTS %Fn_lexunits.table% ( luid INTEGER NOT NULL,frameid INTEGER,lexunit VARCHAR(64),posid INTEGER,ludefinition TEXT,ludict CHARACTER,statusid INTEGER DEFAULT NULL,totalannotated INTEGER,incorporatedfeid INTEGER DEFAULT NULL,incorporatedfetypeid INTEGER DEFAULT NULL,noccurs INTEGER DEFAULT 1,PRIMARY KEY (luid) );
lexunits.altcreate1=ALTER TABLE %Fn_lexunits.table% ADD COLUMN incorporatedfetype VARCHAR(30) AFTER incorporatedfeid;
lexunits.altcreate2=ALTER TABLE %Fn_lexunits.table% ADD COLUMN status VARCHAR(32) AFTER statusid;
lexunits.index1=CREATE INDEX IF NOT EXISTS k_%Fn_lexunits.table%_frameid ON %Fn_lexunits.table% (frameid);
lexunits.no-index1=DROP INDEX IF EXISTS k_%Fn_lexunits.table%_frameid;
lexunits.fk1=ALTER TABLE %Fn_lexunits.table% ADD CONSTRAINT fk_%Fn_lexunits.table%_frameid FOREIGN KEY (frameid) REFERENCES %Fn_frames.table% (frameid);
lexunits.fk2=ALTER TABLE %Fn_lexunits.table% ADD CONSTRAINT fk_%Fn_lexunits.table%_posid FOREIGN KEY (posid) REFERENCES %Fn_poses.table% (posid);
lexunits.fk3=ALTER TABLE %Fn_lexunits.table% ADD CONSTRAINT fk_%Fn_lexunits.table%_incorporatedfeid FOREIGN KEY (incorporatedfeid) REFERENCES %Fn_fes.table% (feid);
lexunits.no-fk1=ALTER TABLE %Fn_lexunits.table% DROP CONSTRAINT fk_%Fn_lexunits.table%_frameid CASCADE;
lexunits.no-fk2=ALTER TABLE %Fn_lexunits.table% DROP CONSTRAINT fk_%Fn_lexunits.table%_incorporatedfeid CASCADE;
lexunits.no-fk3=ALTER TABLE %Fn_lexunits.table% DROP CONSTRAINT fk_%Fn_lexunits.table%_posid CASCADE;
lexunits.insert=INSERT INTO %Fn_lexunits.table% (luid,frameid,lexunit,posid,ludefinition,ludict,status,incorporatedfetype,totalannotated) VALUES(?,?,?,?,?,?,?,?,?);
lexunits.insert2=INSERT INTO %Fn_lexunits.table% (luid,frameid,lexunit,posid,ludefinition,ludict,status,incorporatedfetype,totalannotated) VALUES(?,?,?,?,?,?,?,?,?) ON DUPLICATE KEY UPDATE noccurs=noccurs+1;

lexunits_semtypes.table=fnlexunits_semtypes
lexunits_semtypes.create=CREATE TABLE IF NOT EXISTS %Fn_lexunits_semtypes.table% ( luid INTEGER NOT NULL,semtypeid INTEGER NOT NULL,PRIMARY KEY (luid,semtypeid) );
lexunits_semtypes.fk1=ALTER TABLE %Fn_lexunits_semtypes.table% ADD CONSTRAINT fk_%Fn_lexunits_semtypes.table%_luid FOREIGN KEY (luid) REFERENCES %Fn_lexunits.table% (luid);
lexunits_semtypes.fk2=ALTER TABLE %Fn_lexunits_semtypes.table% ADD CONSTRAINT fk_%Fn_lexunits_semtypes.table%_semtypeid FOREIGN KEY (semtypeid) REFERENCES %Fn_semtypes.table% (semtypeid);
lexunits_semtypes.no-fk1=ALTER TABLE %Fn_lexunits_semtypes.table% DROP CONSTRAINT fk_%Fn_lexunits_semtypes.table%_luid CASCADE;
lexunits_semtypes.no-fk2=ALTER TABLE %Fn_lexunits_semtypes.table% DROP CONSTRAINT fk_%Fn_lexunits_semtypes.table%_semtypeid CASCADE;
lexunits_semtypes.insert=INSERT INTO %Fn_lexunits_semtypes.table% (luid,semtypeid) VALUES(?,?);

lexunits_governors.table=fnlexunits_governors
lexunits_governors.create=CREATE TABLE IF NOT EXISTS %Fn_lexunits_governors.table% ( luid INTEGER NOT NULL,governorid INTEGER NOT NULL,PRIMARY KEY (luid,governorid) );
lexunits_governors.fk1=ALTER TABLE %Fn_lexunits_governors.table% ADD CONSTRAINT fk_%Fn_lexunits_governors.table%_luid FOREIGN KEY k_%Fn_lexunits_governors.table%_luid (luid) REFERENCES %Fn_lexunits.table% (luid);
lexunits_governors.fk2=ALTER TABLE %Fn_lexunits_governors.table% ADD CONSTRAINT fk_%Fn_lexunits_governors.table%_governorid FOREIGN KEY k_%Fn_lexunits_governors.table%_governorid (governorid) REFERENCES %Fn_governors.table% (governorid);
lexunits_governors.no-fk1=ALTER TABLE %Fn_lexunits_governors.table% DROP FOREIGN KEY fk_%Fn_lexunits_governors.table%_governorid;
lexunits_governors.no-fk2=ALTER TABLE %Fn_lexunits_governors.table% DROP FOREIGN KEY fk_%Fn_lexunits_governors.table%_luid;
lexunits_governors.insert=INSERT INTO %Fn_lexunits_governors.table% (luid,governorid) VALUES(?,?);

patterns.table=fnpatterns
patterns.create=CREATE TABLE IF NOT EXISTS %Fn_patterns.table% ( patternid INTEGER NOT NULL,fegrid INTEGER,total INTEGER,PRIMARY KEY (patternid) );
patterns.fk1=ALTER TABLE %Fn_patterns.table% ADD CONSTRAINT fk_%Fn_patterns.table%_fegrid FOREIGN KEY (fegrid) REFERENCES %Fn_fegrouprealizations.table% (fegrid);
patterns.no-fk1=ALTER TABLE %Fn_patterns.table% DROP CONSTRAINT fk_%Fn_patterns.table%_fegrid CASCADE;
patterns.insert=INSERT INTO %Fn_patterns.table% (patternid,fegrid,total) VALUES(?,?,?);

patterns_annosets.table=fnpatterns_annosets
patterns_annosets.create=CREATE TABLE IF NOT EXISTS %Fn_patterns_annosets.table% ( patternid INTEGER NOT NULL,annosetid INTEGER NOT NULL,PRIMARY KEY (patternid,annosetid) );
patterns_annosets.fk1=ALTER TABLE %Fn_patterns_annosets.table% ADD CONSTRAINT fk_%Fn_patterns_annosets.table%_patternid FOREIGN KEY (patternid) REFERENCES %Fn_patterns.table% (patternid);
patterns_annosets.fk2=ALTER TABLE %Fn_patterns_annosets.table% ADD CONSTRAINT fk_%Fn_patterns_annosets.table%_annosetid FOREIGN KEY (annosetid) REFERENCES %Fn_annosets.table% (annosetid);
patterns_annosets.no-fk1=ALTER TABLE %Fn_patterns_annosets.table% DROP CONSTRAINT fk_%Fn_patterns_annosets.table%_annosetid CASCADE;
patterns_annosets.no-fk2=ALTER TABLE %Fn_patterns_annosets.table% DROP CONSTRAINT fk_%Fn_patterns_annosets.table%_patternid CASCADE;
patterns_annosets.insert=INSERT INTO %Fn_patterns_annosets.table% (patternid,annosetid) VALUES(?,?);

patterns_valenceunits.table=fnpatterns_valenceunits
patterns_valenceunits.create=CREATE TABLE IF NOT EXISTS %Fn_patterns_valenceunits.table% ( pvid INTEGER NOT NULL AUTO_INCREMENT,patternid INTEGER NOT NULL,vuid INTEGER NOT NULL,feid INTEGER,fetypeid INTEGER,PRIMARY KEY (pvid) );
patterns_valenceunits.altcreate1=ALTER TABLE %Fn_patterns_valenceunits.table% ADD COLUMN fetype VARCHAR(30) AFTER feid;
patterns_valenceunits.fk1=ALTER TABLE %Fn_patterns_valenceunits.table% ADD CONSTRAINT fk_%Fn_patterns_valenceunits.table%_patternid FOREIGN KEY (patternid) REFERENCES %Fn_patterns.table% (patternid);
patterns_valenceunits.fk2=ALTER TABLE %Fn_patterns_valenceunits.table% ADD CONSTRAINT fk_%Fn_patterns_valenceunits.table%_vuid FOREIGN KEY (vuid) REFERENCES %Fn_valenceunits.table% (vuid);
patterns_valenceunits.fk3=ALTER TABLE %Fn_patterns_valenceunits.table% ADD CONSTRAINT fk_%Fn_patterns_valenceunits.table%_feid FOREIGN KEY (feid) REFERENCES %Fn_fes.table% (feid);
patterns_valenceunits.fk4=ALTER TABLE %Fn_patterns_valenceunits.table% ADD CONSTRAINT fk_%Fn_patterns_valenceunits.table%_fetypeid FOREIGN KEY (fetypeid) REFERENCES %Fn_fetypes.table% (fetypeid);
patterns_valenceunits.no-fk1=ALTER TABLE %Fn_patterns_valenceunits.table% DROP CONSTRAINT fk_%Fn_patterns_valenceunits.table%_feid CASCADE;
patterns_valenceunits.no-fk2=ALTER TABLE %Fn_patterns_valenceunits.table% DROP CONSTRAINT fk_%Fn_patterns_valenceunits.table%_fetypeid CASCADE;
patterns_valenceunits.no-fk3=ALTER TABLE %Fn_patterns_valenceunits.table% DROP CONSTRAINT fk_%Fn_patterns_valenceunits.table%_patternid CASCADE;
patterns_valenceunits.no-fk4=ALTER TABLE %Fn_patterns_valenceunits.table% DROP CONSTRAINT fk_%Fn_patterns_valenceunits.table%_vuid CASCADE;
patterns_valenceunits.insert=INSERT INTO %Fn_patterns_valenceunits.table% (patternid,vuid,fetype) VALUES(?,?,?);

poses.table=fnposes
poses.create=CREATE TABLE IF NOT EXISTS %Fn_poses.table% ( posid INTEGER NOT NULL AUTO_INCREMENT,pos VARCHAR(8),PRIMARY KEY (posid) );
poses.unq1=CREATE UNIQUE INDEX IF NOT EXISTS unq_%Fn_poses.table%_pos ON %Fn_poses.table% (pos);
poses.no-unq1=DROP INDEX IF EXISTS unq_%Fn_poses.table%_pos;
poses.insert=INSERT INTO %Fn_poses.table% (pos) VALUES(?);

pttypes.table=fnpttypes
pttypes.create=CREATE TABLE IF NOT EXISTS %Fn_pttypes.table% ( ptid INTEGER NOT NULL AUTO_INCREMENT,pt VARCHAR(20),PRIMARY KEY (ptid) );
pttypes.unq1=CREATE UNIQUE INDEX IF NOT EXISTS unq_%Fn_pttypes.table%_pt ON %Fn_pttypes.table% (pt);
pttypes.no-unq1=DROP INDEX IF EXISTS unq_%Fn_pttypes.table%_pt;

semtypes.table=fnsemtypes
semtypes.create=CREATE TABLE IF NOT EXISTS %Fn_semtypes.table% ( semtypeid INTEGER NOT NULL,semtype VARCHAR(32),semtypeabbrev VARCHAR(24),semtypedefinition TEXT,PRIMARY KEY (semtypeid) );
semtypes.unq1=CREATE UNIQUE INDEX IF NOT EXISTS unq_%Fn_semtypes.table%_semtype ON %Fn_semtypes.table% (semtype);
semtypes.no-unq1=DROP INDEX IF EXISTS unq_%Fn_semtypes.table%_semtype;
semtypes.insert=INSERT INTO %Fn_semtypes.table% (semtypeid,semtype,semtypeabbrev,semtypedefinition) VALUES(?,?,?,?);

semtypes_supers.table=fnsemtypes_supers
semtypes_supers.create=CREATE TABLE IF NOT EXISTS %Fn_semtypes_supers.table% ( semtypeid INTEGER NOT NULL,supersemtypeid INTEGER NOT NULL,PRIMARY KEY (semtypeid,supersemtypeid) );
semtypes_supers.fk1=ALTER TABLE %Fn_semtypes_supers.table% ADD CONSTRAINT fk_%Fn_semtypes_supers.table%_semtypeid FOREIGN KEY (semtypeid) REFERENCES %Fn_semtypes.table% (semtypeid);
semtypes_supers.fk2=ALTER TABLE %Fn_semtypes_supers.table% ADD CONSTRAINT fk_%Fn_semtypes_supers.table%_supersemtypeid FOREIGN KEY (supersemtypeid) REFERENCES %Fn_semtypes.table% (semtypeid);
semtypes_supers.no-fk1=ALTER TABLE %Fn_semtypes_supers.table% DROP CONSTRAINT fk_%Fn_semtypes_supers.table%_semtypeid CASCADE;
semtypes_supers.no-fk2=ALTER TABLE %Fn_semtypes_supers.table% DROP CONSTRAINT fk_%Fn_semtypes_supers.table%_supersemtypeid CASCADE;
semtypes_supers.insert=INSERT INTO %Fn_semtypes_supers.table% (semtypeid,supersemtypeid) VALUES(?,?);

sentences.table=fnsentences
sentences.create=CREATE TABLE IF NOT EXISTS %Fn_sentences.table% ( sentenceid INTEGER NOT NULL,documentid INTEGER DEFAULT NULL,corpusid INTEGER DEFAULT NULL,paragno INTEGER,sentno INTEGER,text TEXT,apos INTEGER,noccurs INTEGER DEFAULT 1,PRIMARY KEY (sentenceid) );
sentences.fk1=ALTER TABLE %Fn_sentences.table% ADD CONSTRAINT fk_%Fn_sentences.table%_documentid FOREIGN KEY (documentid) REFERENCES %Fn_documents.table% (documentid);
sentences.fk2=ALTER TABLE %Fn_sentences.table% ADD CONSTRAINT fk_%Fn_sentences.table%_corpusid FOREIGN KEY (corpusid) REFERENCES %Fn_corpuses.table% (corpusid);
sentences.no-fk1=ALTER TABLE %Fn_sentences.table% DROP CONSTRAINT fk_%Fn_sentences.table%_corpusid CASCADE;
sentences.no-fk2=ALTER TABLE %Fn_sentences.table% DROP CONSTRAINT fk_%Fn_sentences.table%_documentid CASCADE;
sentences.insert=INSERT INTO %Fn_sentences.table% (sentenceid,corpusid,documentid,paragno,sentno,text,apos) VALUES(?,?,?,?,?,?,?) ON DUPLICATE KEY UPDATE noccurs=noccurs+1;

statuses.table=fnstatuses
statuses.create=CREATE TABLE IF NOT EXISTS %Fn_statuses.table% ( statusid INTEGER NOT NULL,status VARCHAR(32),PRIMARY KEY (statusid) );

subcorpuses.table=fnsubcorpuses
subcorpuses.create=CREATE TABLE IF NOT EXISTS %Fn_subcorpuses.table% ( subcorpusid INTEGER NOT NULL,luid INTEGER,subcorpus VARCHAR(80),PRIMARY KEY (subcorpusid) );
subcorpuses.fk1=ALTER TABLE %Fn_subcorpuses.table% ADD CONSTRAINT fk_%Fn_subcorpuses.table%_luid FOREIGN KEY (luid) REFERENCES %Fn_lexunits.table% (luid);
subcorpuses.no-fk1=ALTER TABLE %Fn_subcorpuses.table% DROP CONSTRAINT fk_%Fn_subcorpuses.table%_luid CASCADE;
subcorpuses.insert=INSERT INTO %Fn_subcorpuses.table% (subcorpusid,luid,subcorpus) VALUES(?,?,?);

subcorpuses_sentences.table=fnsubcorpuses_sentences
subcorpuses_sentences.create=CREATE TABLE IF NOT EXISTS %Fn_subcorpuses_sentences.table% ( subcorpusid INTEGER NOT NULL,sentenceid INTEGER NOT NULL,PRIMARY KEY (subcorpusid,sentenceid) );
subcorpuses_sentences.fk1=ALTER TABLE %Fn_subcorpuses_sentences.table% ADD CONSTRAINT fk_%Fn_subcorpuses_sentences.table%_subcorpusid FOREIGN KEY (subcorpusid) REFERENCES %Fn_subcorpuses.table% (subcorpusid);
subcorpuses_sentences.fk2=ALTER TABLE %Fn_subcorpuses_sentences.table% ADD CONSTRAINT fk_%Fn_subcorpuses_sentences.table%_sentenceid FOREIGN KEY (sentenceid) REFERENCES %Fn_sentences.table% (sentenceid);
subcorpuses_sentences.no-fk1=ALTER TABLE %Fn_subcorpuses_sentences.table% DROP CONSTRAINT fk_%Fn_subcorpuses_sentences.table%_subcorpusid CASCADE;
subcorpuses_sentences.no-fk2=ALTER TABLE %Fn_subcorpuses_sentences.table% DROP CONSTRAINT fk_%Fn_subcorpuses_sentences.table%_sentenceid CASCADE;
subcorpuses_sentences.insert=INSERT INTO %Fn_subcorpuses_sentences.table% (subcorpusid,sentenceid) VALUES(?,?);

valenceunits.table=fnvalenceunits
valenceunits.create=CREATE TABLE IF NOT EXISTS %Fn_valenceunits.table% ( vuid INTEGER NOT NULL,ferid INTEGER NOT NULL,ptid INTEGER,gfid INTEGER,PRIMARY KEY (vuid) );
valenceunits.altcreate1=ALTER TABLE %Fn_valenceunits.table% ADD COLUMN pt VARCHAR(20) AFTER ptid;
valenceunits.altcreate2=ALTER TABLE %Fn_valenceunits.table% ADD COLUMN gf VARCHAR(10) AFTER gfid;
valenceunits.fk1=ALTER TABLE %Fn_valenceunits.table% ADD CONSTRAINT fk_%Fn_valenceunits.table%_ferid FOREIGN KEY (ferid) REFERENCES %Fn_ferealizations.table% (ferid);
valenceunits.fk2=ALTER TABLE %Fn_valenceunits.table% ADD CONSTRAINT fk_%Fn_valenceunits.table%_ptid FOREIGN KEY (ptid) REFERENCES %Fn_pttypes.table% (ptid);
valenceunits.fk3=ALTER TABLE %Fn_valenceunits.table% ADD CONSTRAINT fk_%Fn_valenceunits.table%_gfid FOREIGN KEY (gfid) REFERENCES %Fn_gftypes.table% (gfid);
valenceunits.no-fk1=ALTER TABLE %Fn_valenceunits.table% DROP CONSTRAINT fk_%Fn_valenceunits.table%_ferid CASCADE;
valenceunits.no-fk2=ALTER TABLE %Fn_valenceunits.table% DROP CONSTRAINT fk_%Fn_valenceunits.table%_gfid CASCADE;
valenceunits.no-fk3=ALTER TABLE %Fn_valenceunits.table% DROP CONSTRAINT fk_%Fn_valenceunits.table%_ptid CASCADE;
valenceunits.insert=INSERT INTO %Fn_valenceunits.table% (vuid,ferid,pt,gf) VALUES(?,?,?,?);

valenceunits_annosets.table=fnvalenceunits_annosets
valenceunits_annosets.create=CREATE TABLE IF NOT EXISTS %Fn_valenceunits_annosets.table% ( vuid INTEGER NOT NULL,annosetid INTEGER NOT NULL,PRIMARY KEY (vuid,annosetid) );
valenceunits_annosets.fk1=ALTER TABLE %Fn_valenceunits_annosets.table% ADD CONSTRAINT fk_%Fn_valenceunits_annosets.table%_vuid FOREIGN KEY (vuid) REFERENCES %Fn_valenceunits.table% (vuid);
valenceunits_annosets.fk2=ALTER TABLE %Fn_valenceunits_annosets.table% ADD CONSTRAINT fk_%Fn_valenceunits_annosets.table%_annosetid FOREIGN KEY (annosetid) REFERENCES %Fn_annosets.table% (annosetid);
valenceunits_annosets.no-fk1=ALTER TABLE %Fn_valenceunits_annosets.table% DROP CONSTRAINT fk_%Fn_valenceunits_annosets.table%_annosetid CASCADE;
valenceunits_annosets.no-fk2=ALTER TABLE %Fn_valenceunits_annosets.table% DROP CONSTRAINT fk_%Fn_valenceunits_annosets.table%_vuid CASCADE;
valenceunits_annosets.insert=INSERT INTO %Fn_valenceunits_annosets.table% (vuid,annosetid) VALUES(?,?);

words.table=fnwords
words.create=CREATE TABLE IF NOT EXISTS %Fn_words.table% ( fnwordid INTEGER NOT NULL,wordid INTEGER NULL,word VARCHAR(30),PRIMARY KEY (fnwordid) );
words.pk=ALTER TABLE %Fn_words.table% ADD CONSTRAINT pk_%Fn_words.table% PRIMARY KEY (fnwordid);
words.no-pk=ALTER TABLE %Fn_words.table% DROP PRIMARY KEY;
words.unq1=CREATE UNIQUE INDEX IF NOT EXISTS unq_%Fn_words.table%_word ON %Fn_words.table% (word);
words.no-unq1=DROP INDEX IF EXISTS unq_%Fn_words.table%_word;
words.fk1=ALTER TABLE %Fn_words.table% ADD CONSTRAINT fk_%Fn_words.table%_wordid FOREIGN KEY (wordid) REFERENCES %Word.table% (wordid);
words.no-fk1=ALTER TABLE %Fn_words.table% DROP CONSTRAINT fk_%Fn_words.table%_wordid CASCADE;
words.insert=INSERT INTO %Fn_words.table% (fnwordid,wordid,word) VALUES(?,?,?);
words.select=SELECT fnwordid FROM %Fn_words.table% WHERE word = ?;
