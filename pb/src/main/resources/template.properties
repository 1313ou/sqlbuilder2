PbAspectType.table=pbaspects
PbAspectType.create=CREATE TABLE IF NOT EXISTS %PbAspectType.table% (aspect INTEGER NOT NULL,aspectname VARCHAR (20) NOT NULL,PRIMARY KEY (aspect));
PbAspectType.pk=ALTER TABLE %PbAspectType.table% ADD CONSTRAINT pk_%PbAspectType.table% PRIMARY KEY (aspect);
PbAspectType.no-pk=ALTER TABLE %PbAspectType.table% DROP CONSTRAINT pk_%PbAspectType.table% CASCADE;
PbAspectType.insert=INSERT INTO %PbAspectType.table% (aspect,aspectname) VALUES (?,?);

PbFormType.table=pbforms
PbFormType.create=CREATE TABLE IF NOT EXISTS %PbFormType.table% (form INTEGER NOT NULL,formname VARCHAR (20) NOT NULL,PRIMARY KEY (form));
PbFormType.pk=ALTER TABLE %PbFormType.table% ADD CONSTRAINT pk_%PbFormType.table% PRIMARY KEY (form);
PbFormType.no-pk=ALTER TABLE %PbFormType.table% DROP CONSTRAINT pk_%PbFormType.table% CASCADE;
PbFormType.insert=INSERT INTO %PbFormType.table% (form,formname) VALUES (?,?);

PbTenseType.table=pbtenses
PbTenseType.create=CREATE TABLE IF NOT EXISTS %PbTenseType.table% (tense INTEGER NOT NULL,tensename VARCHAR (20) NOT NULL,PRIMARY KEY (tense));
PbTenseType.pk=ALTER TABLE %PbTenseType.table% ADD CONSTRAINT pk_%PbTenseType.table% PRIMARY KEY (tense);
PbTenseType.no-pk=ALTER TABLE %PbTenseType.table% DROP CONSTRAINT pk_%PbTenseType.table% CASCADE;
PbTenseType.insert=INSERT INTO %PbTenseType.table% (tense,tensename) VALUES (?,?);

PbVoiceType.table=pbvoices
PbVoiceType.create=CREATE TABLE IF NOT EXISTS %PbVoiceType.table% (voice INTEGER NOT NULL,voicename VARCHAR (20) NOT NULL,PRIMARY KEY (voice));
PbVoiceType.pk=ALTER TABLE %PbVoiceType.table% ADD CONSTRAINT pk_%PbVoiceType.table% PRIMARY KEY (voice);
PbVoiceType.no-pk=ALTER TABLE %PbVoiceType.table% DROP CONSTRAINT pk_%PbVoiceType.table% CASCADE;
PbVoiceType.insert=INSERT INTO %PbVoiceType.table% (voice,voicename) VALUES (?,?);

PbPersonType.table=pbpersons
PbPersonType.create=CREATE TABLE IF NOT EXISTS %PbPersonType.table% (person INTEGER NOT NULL,personname VARCHAR (20) NOT NULL,PRIMARY KEY (person));
PbPersonType.pk=ALTER TABLE %PbPersonType.table% ADD CONSTRAINT pk_%PbPersonType.table% PRIMARY KEY (person);
PbPersonType.no-pk=ALTER TABLE %PbPersonType.table% DROP CONSTRAINT pk_%PbPersonType.table% CASCADE;
PbPersonType.insert=INSERT INTO %PbPersonType.table% (person,personname) VALUES (?,?);

PbFuncType.table=pbfuncs
PbFuncType.create=CREATE TABLE IF NOT EXISTS %PbFuncType.table% (func INTEGER NOT NULL,funcname VARCHAR (20) NOT NULL,funcdescr VARCHAR (24) NULL,PRIMARY KEY (func));
PbFuncType.pk=ALTER TABLE %PbFuncType.table% ADD CONSTRAINT pk_%PbFuncType.table% PRIMARY KEY (func);
PbFuncType.no-pk=ALTER TABLE %PbFuncType.table% DROP CONSTRAINT pk_%PbFuncType.table% CASCADE;
PbFuncType.insert=INSERT INTO %PbFuncType.table% (func,funcname,funcdescr) VALUES (?,?,?);

PbArgNType.table=pbargns
PbArgNType.create=CREATE TABLE IF NOT EXISTS %PbArgNType.table% (narg VARCHAR (1) NOT NULL,nargdescr VARCHAR (24) NULL,PRIMARY KEY (narg));
PbArgNType.pk=ALTER TABLE %PbArgNType.table% ADD CONSTRAINT pk_%PbArgNType.table% PRIMARY KEY (narg);
PbArgNType.no-pk=ALTER TABLE %PbArgNType.table% DROP CONSTRAINT pk_%PbArgNType.table% CASCADE;
PbArgNType.insert=INSERT INTO %PbArgNType.table% (narg,nargdescr) VALUES (?,?);

PbVnTheta.table=pbvnthetas
PbVnTheta.create=CREATE TABLE IF NOT EXISTS %PbVnTheta.table% (theta INTEGER NOT NULL,thetaname VARCHAR (20) NOT NULL,PRIMARY KEY (theta));
PbVnTheta.pk=ALTER TABLE %PbVnTheta.table% ADD CONSTRAINT pk_%PbVnTheta.table% PRIMARY KEY (theta);
PbVnTheta.no-pk=ALTER TABLE %PbVnTheta.table% DROP CONSTRAINT pk_%PbVnTheta.table% CASCADE;
PbVnTheta.insert=INSERT INTO %PbVnTheta.table% (theta,thetaname) VALUES (?,?);

PbRoleSet.table=pbrolesets
PbRoleSet.create=CREATE TABLE IF NOT EXISTS %PbRoleSet.table% (rolesetid INTEGER NOT NULL,rolesethead VARCHAR (24) NOT NULL,rolesetname VARCHAR (64) NOT NULL,rolesetdescr TEXT NOT NULL,pbwordid INTEGER NULL,PRIMARY KEY (rolesetid));
PbRoleSet.pk=ALTER TABLE %PbRoleSet.table% ADD CONSTRAINT pk_%PbRoleSet.table% PRIMARY KEY (rolesetid);
PbRoleSet.no-pk=ALTER TABLE %PbRoleSet.table% DROP CONSTRAINT pk_%PbRoleSet.table% CASCADE;
PbRoleSet.index1=CREATE INDEX IF NOT EXISTS k_%PbRoleSet.table%_rolesethead ON %PbRoleSet.table% (rolesethead);
PbRoleSet.no-index1=DROP INDEX IF EXISTS k_%PbRoleSet.table%_rolesethead;
PbRoleSet.index2=CREATE INDEX IF NOT EXISTS k_%PbRoleSet.table%_rolesetname ON %PbRoleSet.table% (rolesetname);
PbRoleSet.no-index2=DROP INDEX IF EXISTS k_%PbRoleSet.table%_rolesetname;
PbRoleSet.index3=CREATE INDEX IF NOT EXISTS k_%PbRoleSet.table%_pbwordid ON %PbRoleSet.table% (pbwordid);
PbRoleSet.no-index3=DROP INDEX IF EXISTS k_%PbRoleSet.table%_pbwordid;
PbRoleSet.fk1=ALTER TABLE %PbRoleSet.table% ADD CONSTRAINT fk_%PbRoleSet.table%_pbwordid FOREIGN KEY (pbwordid) REFERENCES %PbWord.table% (pbwordid);
PbRoleSet.no-fk1=ALTER TABLE %PbRoleSet.table% DROP CONSTRAINT fk_%PbRoleSet.table%_pbwordid CASCADE;
PbRoleSet.insert=INSERT INTO %PbRoleSet.table% (rolesetid,rolesethead,rolesetname,rolesetdescr,pbwordid) VALUES (?,?,?,?,?);
PbRoleSet.select=SELECT rolesetid FROM %PbRoleSet.table% WHERE rolesethead = ? AND rolesetname = ?;

PbRoleSetMember.table=pbrolesetmembers
PbRoleSetMember.create=CREATE TABLE IF NOT EXISTS %PbRoleSetMember.table% (rolesetid INTEGER NOT NULL,pbwordid INTEGER NOT NULL DEFAULT 0,PRIMARY KEY (rolesetid,pbwordid));
PbRoleSetMember.pk=ALTER TABLE %PbRoleSetMember.table% ADD CONSTRAINT pk_%PbRoleSetMember.table% PRIMARY KEY (rolesetid,pbwordid);
PbRoleSetMember.no-pk=ALTER TABLE %PbRoleSetMember.table% DROP CONSTRAINT pk_%PbRoleSetMember.table% CASCADE;
PbRoleSetMember.index1=CREATE INDEX IF NOT EXISTS k_%PbRoleSetMember.table%_rolesetid ON %PbRoleSetMember.table% (rolesetid);
PbRoleSetMember.no-index1=DROP INDEX IF EXISTS k_%PbRoleSetMember.table%_rolesetid;
PbRoleSetMember.index2=CREATE INDEX IF NOT EXISTS k_%PbRoleSetMember.table%_pbwordid ON %PbRoleSetMember.table% (pbwordid);
PbRoleSetMember.no-index2=DROP INDEX IF EXISTS k_%PbRoleSetMember.table%_pbwordid;
PbRoleSetMember.fk1=ALTER TABLE %PbRoleSetMember.table% ADD CONSTRAINT fk_%PbRoleSetMember.table%_rolesetid FOREIGN KEY (rolesetid) REFERENCES %PbRoleSet.table% (rolesetid);
PbRoleSetMember.no-fk1=ALTER TABLE %PbRoleSetMember.table% DROP CONSTRAINT fk_%PbRoleSetMember.table%_rolesetid CASCADE;
PbRoleSetMember.fk2=ALTER TABLE %PbRoleSetMember.table% ADD CONSTRAINT fk_%PbRoleSetMember.table%_pbwordid FOREIGN KEY (pbwordid) REFERENCES %PbWord.table% (pbwordid);
PbRoleSetMember.no-fk2=ALTER TABLE %PbRoleSetMember.table% DROP CONSTRAINT fk_%PbRoleSetMember.table%_pbwordid CASCADE;
PbRoleSetMember.insert=INSERT INTO %PbRoleSetMember.table% (rolesetid,pbwordid) VALUES (?,?);
PbRoleSetMember.select=SELECT rolesetid,pbwordid FROM %PbRoleSetMember.table% WHERE rolesetid = ? AND pbwordid = ?;

PbRole.table=pbroles
PbRole.create=CREATE TABLE IF NOT EXISTS %PbRole.table% (roleid INTEGER NOT NULL,rolesetid INTEGER NOT NULL,narg VARCHAR (1 ) NOT NULL,func INTEGER NULL,theta INTEGER NULL,roledescr VARCHAR (100) NOT NULL,PRIMARY KEY (roleid));
PbRole.pk=ALTER TABLE %PbRole.table% ADD CONSTRAINT pk_%PbRole.table% PRIMARY KEY (roleid);
PbRole.no-pk=ALTER TABLE %PbRole.table% DROP CONSTRAINT pk_%PbRole.table% CASCADE;
PbRole.index1=CREATE INDEX IF NOT EXISTS k_%PbRole.table%_roledescr ON %PbRole.table% (roledescr);
PbRole.no-index1=DROP INDEX IF EXISTS k_%PbRole.table%_roledescr;
PbRole.index2=CREATE INDEX IF NOT EXISTS k_%PbRole.table%_rolesetid ON %PbRole.table% (rolesetid);
PbRole.no-index2=DROP INDEX IF EXISTS k_%PbRole.table%_rolesetid;
PbRole.fk1=ALTER TABLE %PbRole.table% ADD CONSTRAINT fk_%PbRole.table%_rolesetid FOREIGN KEY (rolesetid) REFERENCES %PbRoleSet.table% (rolesetid);
PbRole.no-fk1=ALTER TABLE %PbRole.table% DROP CONSTRAINT fk_%PbRole.table%_rolesetid CASCADE;
PbRole.fk2=ALTER TABLE %PbRole.table% ADD CONSTRAINT fk_%PbRole.table%_func FOREIGN KEY (func) REFERENCES %PbFuncType.table% (func);
PbRole.no-fk2=ALTER TABLE %PbRole.table% DROP CONSTRAINT fk_%PbRole.table%_func CASCADE;
PbRole.insert=INSERT INTO %PbRole.table% (roleid,narg,func,theta,roledescr,rolesetid) VALUES (?,?,?,?,?,?);

PbExample.table=pbexamples
PbExample.create=CREATE TABLE IF NOT EXISTS %PbExample.table% (exampleid INTEGER NOT NULL,rolesetid INTEGER NOT NULL,examplename VARCHAR (180) NOT NULL,text TEXT,aspect INTEGER NULL,form INTEGER NULL,tense INTEGER NULL,voice INTEGER NULL,person INTEGER NULL,PRIMARY KEY (exampleid));
PbExample.pk=ALTER TABLE %PbExample.table% ADD CONSTRAINT pk_%PbExample.table% PRIMARY KEY (exampleid);
PbExample.no-pk=ALTER TABLE %PbExample.table% DROP CONSTRAINT pk_%PbExample.table% CASCADE;
PbExample.index1=CREATE INDEX IF NOT EXISTS k_%PbExample.table%_examplename ON %PbExample.table% (examplename);
PbExample.no-index1=DROP INDEX IF EXISTS k_%PbExample.table%_examplename;
PbExample.index2=CREATE INDEX IF NOT EXISTS k_%PbExample.table%_rolesetid ON %PbExample.table% (rolesetid);
PbExample.no-index2=DROP INDEX IF EXISTS k_%PbExample.table%_rolesetid;
PbExample.fk1=ALTER TABLE %PbExample.table% ADD CONSTRAINT fk_%PbExample.table%_rolesetid FOREIGN KEY (rolesetid) REFERENCES %PbRoleSet.table% (rolesetid);
PbExample.no-fk1=ALTER TABLE %PbExample.table% DROP CONSTRAINT fk_%PbExample.table%_rolesetid CASCADE;
PbExample.fk2=ALTER TABLE %PbExample.table% ADD CONSTRAINT fk_%PbExample.table%_aspect FOREIGN KEY (aspect) REFERENCES %PbAspectType.table% (aspect);
PbExample.no-fk2=ALTER TABLE %PbExample.table% DROP CONSTRAINT fk_%PbExample.table%_aspect CASCADE;
PbExample.fk3=ALTER TABLE %PbExample.table% ADD CONSTRAINT fk_%PbExample.table%_form FOREIGN KEY (form) REFERENCES %PbFormType.table% (form);
PbExample.no-fk3=ALTER TABLE %PbExample.table% DROP CONSTRAINT fk_%PbExample.table%_form CASCADE;
PbExample.fk4=ALTER TABLE %PbExample.table% ADD CONSTRAINT fk_%PbExample.table%_tense FOREIGN KEY (tense) REFERENCES %PbTenseType.table% (tense);
PbExample.no-fk4=ALTER TABLE %PbExample.table% DROP CONSTRAINT fk_%PbExample.table%_tense CASCADE;
PbExample.fk5=ALTER TABLE %PbExample.table% ADD CONSTRAINT fk_%PbExample.table%_voice FOREIGN KEY (voice) REFERENCES %PbVoiceType.table% (voice);
PbExample.no-fk5=ALTER TABLE %PbExample.table% DROP CONSTRAINT fk_%PbExample.table%_voice CASCADE;
PbExample.fk6=ALTER TABLE %PbExample.table% ADD CONSTRAINT fk_%PbExample.table%_person FOREIGN KEY (person) REFERENCES %PbPersonType.table% (person);
PbExample.no-fk6=ALTER TABLE %PbExample.table% DROP CONSTRAINT fk_%PbExample.table%_person CASCADE;
PbExample.insert=INSERT INTO %PbExample.table% (exampleid,examplename,text,aspect,form,tense,voice,person,rolesetid) VALUES (?,?,?,?,?,?,?,?,?);

PbRel.table=pbrels
PbRel.create=CREATE TABLE IF NOT EXISTS %PbRel.table% (relid INTEGER NOT NULL,exampleid INTEGER NOT NULL,rel VARCHAR (32) NOT NULL,func INTEGER NULL,PRIMARY KEY (relid));
PbRel.pk=ALTER TABLE %PbRel.table% ADD CONSTRAINT pk_%PbRel.table% PRIMARY KEY (relid);
PbRel.no-pk=ALTER TABLE %PbRel.table% DROP CONSTRAINT pk_%PbRel.table% CASCADE;
PbRel.index1=CREATE INDEX IF NOT EXISTS k_%PbRel.table%_rel ON %PbRel.table% (rel);
PbRel.no-index1=DROP INDEX IF EXISTS k_%PbRel.table%_rel;
PbRel.fk1=ALTER TABLE %PbRel.table% ADD CONSTRAINT fk_%PbRel.table%_exampleid FOREIGN KEY (exampleid) REFERENCES %PbExample.table% (exampleid);
PbRel.no-fk1=ALTER TABLE %PbRel.table% DROP CONSTRAINT fk_%PbRel.table%_exampleid CASCADE;
PbRel.insert=INSERT INTO %PbRel.table% (relid,rel,func,exampleid) VALUES (?,?,?,?);

PbArg.table=pbargs
PbArg.create=CREATE TABLE IF NOT EXISTS %PbArg.table% (argid INTEGER NOT NULL,exampleid INTEGER NOT NULL,arg TEXT,narg VARCHAR (1)  NULL,func INTEGER NULL,PRIMARY KEY (argid));
PbArg.pk=ALTER TABLE %PbArg.table% ADD CONSTRAINT pk_%PbArg.table% PRIMARY KEY (argid);
PbArg.no-pk=ALTER TABLE %PbArg.table% DROP CONSTRAINT pk_%PbArg.table% CASCADE;
PbArg.index1=CREATE INDEX IF NOT EXISTS k_%PbArg.table%_arg ON %PbArg.table% (arg);
PbArg.no-index1=DROP INDEX IF EXISTS k_%PbArg.table%_arg;
PbArg.fk1=ALTER TABLE %PbArg.table% ADD CONSTRAINT fk_%PbArg.table%_exampleid FOREIGN KEY (exampleid) REFERENCES %PbExample.table% (exampleid);
PbArg.no-fk1=ALTER TABLE %PbArg.table% DROP CONSTRAINT fk_%PbArg.table%_exampleid CASCADE;
PbArg.fk2=ALTER TABLE %PbArg.table% ADD CONSTRAINT fk_%PbArg.table%_narg FOREIGN KEY (narg) REFERENCES %PbArgNType.table% (narg);
PbArg.no-fk2=ALTER TABLE %PbArg.table% DROP CONSTRAINT fk_%PbArg.table%_narg CASCADE;
PbArg.fk3=ALTER TABLE %PbArg.table% ADD CONSTRAINT fk_%PbArg.table%_func FOREIGN KEY (func) REFERENCES %PbFuncType.table% (func);
PbArg.no-fk3=ALTER TABLE %PbArg.table% DROP CONSTRAINT fk_%PbArg.table%_func CASCADE;
PbArg.insert=INSERT INTO %PbArg.table% (argid,arg,narg,func,exampleid) VALUES (?,?,?,?,?);

PbWord.table=pbwords
PbWord.create=CREATE TABLE IF NOT EXISTS %PbWord.table% (pbwordid INTEGER NOT NULL,wordid INTEGER NULL,lemma VARCHAR(80) DEFAULT NULL,PRIMARY KEY (pbwordid));
PbWord.pk=ALTER TABLE %PbWord.table% ADD CONSTRAINT pk_%PbWord.table% PRIMARY KEY (pbwordid);
PbWord.no-pk=ALTER TABLE %PbWord.table% DROP PRIMARY KEY;
PbWord.unq1=CREATE UNIQUE INDEX IF NOT EXISTS unq_%PbWord.table%_word ON %PbWord.table% (lemma);
PbWord.no-unq1=DROP INDEX IF EXISTS unq_%PbWord.table%_word;
PbWord.fk1=ALTER TABLE %PbWord.table% ADD CONSTRAINT fk_%PbWord.table%_wordid FOREIGN KEY (wordid) REFERENCES %Word.table% (wordid);
PbWord.no-fk1=ALTER TABLE %PbWord.table% DROP CONSTRAINT fk_%PbWord.table%_wordid CASCADE;
PbWord.insert=INSERT INTO %PbWord.table% (pbwordid,wordid,lemma) VALUES(?,?,?);
PbWord.select=SELECT pbwordid FROM %PbWord.table% WHERE lemma = ?;

PbVnRoleMap.table=pbvnrolemaps
PbVnRoleMap.create=CREATE TABLE IF NOT EXISTS %PbVnRoleMap.table% (rolesetid INTEGER NOT NULL,roleid INTEGER NOT NULL,vnclassid INTEGER NOT NULL,vnroleid INTEGER NOT NULL,PRIMARY KEY (rolesetid,roleid,vnclassid,vnroleid));
PbVnRoleMap.fk1=ALTER TABLE %PbVnRoleMap.table% ADD CONSTRAINT fk_%PbVnRoleMap.table%_rolesetid FOREIGN KEY (rolesetid) REFERENCES %PbRoleSet.table% (rolesetid);
PbVnRoleMap.no-fk1=ALTER TABLE %PbVnRoleMap.table% DROP CONSTRAINT fk_%PbVnRoleMap.table%_rolesetid CASCADE;
PbVnRoleMap.fk2=ALTER TABLE %PbVnRoleMap.table% ADD CONSTRAINT fk_%PbVnRoleMap.table%_roleid FOREIGN KEY (roleid) REFERENCES %PbRole.table% (roleid);
PbVnRoleMap.no-fk2=ALTER TABLE %PbVnRoleMap.table% DROP CONSTRAINT fk_%PbVnRoleMap.table%_roleid CASCADE;
PbVnRoleMap.fk3=ALTER TABLE %PbVnRoleMap.table% ADD CONSTRAINT fk_%PbVnRoleMap.table%_vnclassid FOREIGN KEY (vnclassid) REFERENCES %VnClass.table% (classid);
PbVnRoleMap.no-fk3=ALTER TABLE %PbVnRoleMap.table% DROP CONSTRAINT fk_%PbVnRoleMap.table%_vnclassid CASCADE;
PbVnRoleMap.fk4=ALTER TABLE %PbVnRoleMap.table% ADD CONSTRAINT fk_%PbVnRoleMap.table%_vnroleid FOREIGN KEY (vnroleid) REFERENCES %VnRole.table% (roleid);
PbVnRoleMap.no-fk4=ALTER TABLE %PbVnRoleMap.table% DROP CONSTRAINT fk_%PbVnRoleMap.table%_vnroleid CASCADE;
PbVnRoleMap.insert=INSERT INTO %PbVnRoleMap.table% (rolesetid,roleid,vnclassid,vnroleid) VALUES (?,?,?,?);

PbVnClassMap.table=pbvnclassmaps
PbVnClassMap.create=CREATE TABLE IF NOT EXISTS %PbVnClassMap.table% (rolesetid INTEGER NOT NULL,vnclassid INTEGER NOT NULL,pos VARCHAR(1) NOT NULL,pbwordid INTEGER NOT NULL,PRIMARY KEY (rolesetid,vnclassid,pos,pbwordid));
PbVnClassMap.pk=ALTER TABLE %PbVnClassMap.table% ADD CONSTRAINT pk_%PbVnClassMap.table% PRIMARY KEY (rolesetid,vnclassid,pos,pbwordid);
PbVnClassMap.fk1=ALTER TABLE %PbVnClassMap.table% ADD CONSTRAINT fk_%PbVnClassMap.table%_rolesetid FOREIGN KEY (rolesetid) REFERENCES %PbRoleSet.table% (rolesetid);
PbVnClassMap.no-fk1=ALTER TABLE %PbVnClassMap.table% DROP CONSTRAINT fk_%PbVnClassMap.table%_rolesetid CASCADE;
PbVnClassMap.fk2=ALTER TABLE %PbVnClassMap.table% ADD CONSTRAINT fk_%PbVnClassMap.table%_vnclassid FOREIGN KEY (vnclassid) REFERENCES %VnClass.table% (classid);
PbVnClassMap.no-fk2=ALTER TABLE %PbVnClassMap.table% DROP CONSTRAINT fk_%PbVnClassMap.table%_vnclassid CASCADE;
PbVnClassMap.fk3=ALTER TABLE %PbVnClassMap.table% ADD CONSTRAINT fk_%PbVnClassMap.table%_pbwordid FOREIGN KEY (pbwordid) REFERENCES %PbWord.table% (pbwordid);
PbVnClassMap.no-fk3=ALTER TABLE %PbVnClassMap.table% DROP CONSTRAINT fk_%PbVnClassMap.table%_pbwordid CASCADE;
PbVnClassMap.no-pk=ALTER TABLE %PbVnClassMap.table% DROP PRIMARY KEY;
PbVnClassMap.insert=INSERT INTO %PbVnClassMap.table% (rolesetid,vnclassid,pos,pbwordid) VALUES(?,?,?,?);

PbFnFrameMap.table=pbfnframemaps
PbFnFrameMap.create=CREATE TABLE IF NOT EXISTS %PbFnFrameMap.table% (rolesetid INTEGER NOT NULL,fnframeid INTEGER NOT NULL,pos VARCHAR(1) NOT NULL,pbwordid INTEGER NOT NULL,PRIMARY KEY (rolesetid,fnframeid,pos,pbwordid));
PbFnFrameMap.pk=ALTER TABLE %PbFnFrameMap.table% ADD CONSTRAINT pk_%PbFnFrameMap.table% PRIMARY KEY (rolesetid,fnframeid,pos,pbwordid);
PbFnFrameMap.fk1=ALTER TABLE %PbFnFrameMap.table% ADD CONSTRAINT fk_%PbFnFrameMap.table%_rolesetid FOREIGN KEY (rolesetid) REFERENCES %PbRoleSet.table% (rolesetid);
PbFnFrameMap.no-fk1=ALTER TABLE %PbFnFrameMap.table% DROP CONSTRAINT fk_%PbFnFrameMap.table%_rolesetid CASCADE;
PbFnFrameMap.fk2=ALTER TABLE %PbFnFrameMap.table% ADD CONSTRAINT fk_%PbFnFrameMap.table%_fnframeid FOREIGN KEY (fnframeid) REFERENCES %Fn_frames.table% (frameid);
PbFnFrameMap.no-fk2=ALTER TABLE %PbFnFrameMap.table% DROP CONSTRAINT fk_%PbFnFrameMap.table%_fnframeid CASCADE;
PbFnFrameMap.fk3=ALTER TABLE %PbFnFrameMap.table% ADD CONSTRAINT fk_%PbFnFrameMap.table%_pbwordid FOREIGN KEY (pbwordid) REFERENCES %PbWord.table% (pbwordid);
PbFnFrameMap.no-fk3=ALTER TABLE %PbFnFrameMap.table% DROP CONSTRAINT fk_%PbFnFrameMap.table%_pbwordid CASCADE;
PbFnFrameMap.no-pk=ALTER TABLE %PbFnFrameMap.table% DROP PRIMARY KEY;
PbFnFrameMap.insert=INSERT INTO %PbFnFrameMap.table% (rolesetid,fnframeid,pos,pbwordid) VALUES(?,?,?,?);

PbVn.select.vnrole=SELECT classid,roleid FROM %VnClass.table% LEFT JOIN %VnRoleMap.table% USING(classid) LEFT JOIN %VnRole.table% USING(roleid) LEFT JOIN %VnRoleType.table% USING(roletypeid) WHERE classtag = ? AND roletype = ? GROUP BY classid,roleid ORDER BY roleid;
PbVn.select.vnclass=SELECT classid FROM %VnClass.table% WHERE class = ?;
PbVn.select.vnclasstag=SELECT classid FROM %VnClass.table% WHERE classtag = ?;
PbVn.select.vnclass.like=SELECT classid,class FROM %VnClass.table% WHERE class LIKE ?;
PbVn.select.vnclass.like.lemma=SELECT classid,class FROM %VnClass.table% LEFT JOIN %VnClassMember.table% USING (classid) LEFT JOIN words USING (pbwordid) WHERE lemma = ? AND class LIKE ?;
PbVn.select.vnclasses.lemma=SELECT classid,class FROM %VnClass.table% LEFT JOIN %VnClassMember.table% USING (classid) LEFT JOIN %PbWord.table% USING (pbwordid) WHERE lemma = ?;
PbVn.select.vnclass.lemmas=SELECT lemma FROM %VnClass.table% LEFT JOIN %VnClassMember.table% USING (classid) LEFT JOIN words USING (pbwordid) WHERE class = ?;
PbVn.select.vnword=SELECT vnwordid FROM %VnWord.table% WHERE lemma = ?;

PbFn.select.fnframe=SELECT frameid FROM %Fn_frames.table% WHERE frame = ?;
PbFn.select.fnword=SELECT fnwordid FROM %Fn_words.table% WHERE word = ?;
