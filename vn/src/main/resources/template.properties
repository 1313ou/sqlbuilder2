VnClass.table=vnclasses
VnClass.create=CREATE TABLE IF NOT EXISTS %VnClass.table% (classid INTEGER NOT NULL,class VARCHAR (64) NOT NULL,classtag VARCHAR (32) NOT NULL,PRIMARY KEY (classid));
VnClass.pk=ALTER TABLE %VnClass.table% ADD CONSTRAINT pk_%VnClass.table% PRIMARY KEY (classid);
VnClass.no-pk=ALTER TABLE %VnClass.table% DROP CONSTRAINT pk_%VnClass.table% CASCADE;
VnClass.unq1=CREATE UNIQUE INDEX IF NOT EXISTS unq_%VnClass.table%_class ON %VnClass.table% (class);
VnClass.no-unq1=DROP INDEX IF EXISTS unq_%VnClass.table%_class;
VnClass.unq2=CREATE UNIQUE INDEX IF NOT EXISTS unq_%VnClass.table%_classtag ON %VnClass.table% (classtag);
VnClass.no-unq2=DROP INDEX IF EXISTS unq_%VnClass.table%_classtag;
VnClass.insert=INSERT INTO %VnClass.table% (classid,class,classtag) VALUES (?,?,?);
VnClass.select=SELECT classid FROM %VnClass.table% WHERE class = ?;

VnClassMember.table=vnclassmembers
VnClassMember.create=CREATE TABLE IF NOT EXISTS %VnClassMember.table% (classid INTEGER NOT NULL,vnwordid INTEGER NOT NULL DEFAULT 0,PRIMARY KEY (classid,vnwordid));
VnClassMember.pk=ALTER TABLE %VnClassMember.table% ADD CONSTRAINT pk_%VnClassMember.table% PRIMARY KEY (classid,vnwordid);
VnClassMember.no-pk=ALTER TABLE %VnClassMember.table% DROP CONSTRAINT pk_%VnClassMember.table% CASCADE;
VnClassMember.index1=CREATE INDEX IF NOT EXISTS k_%VnClassMember.table%_classid ON %VnClassMember.table% (classid);
VnClassMember.no-index1=DROP INDEX IF EXISTS k_%VnClassMember.table%_classid;
VnClassMember.index2=CREATE INDEX IF NOT EXISTS k_%VnClassMember.table%_vnwordid ON %VnClassMember.table% (vnwordid);
VnClassMember.no-index2=DROP INDEX IF EXISTS k_%VnClassMember.table%_vnwordid;
VnClassMember.fk1=ALTER TABLE %VnClassMember.table% ADD CONSTRAINT fk_%VnClassMember.table%_classid FOREIGN KEY (classid) REFERENCES %VnClass.table% (classid);
VnClassMember.no-fk1=ALTER TABLE %VnClassMember.table% DROP CONSTRAINT fk_%VnClassMember.table%_classid CASCADE;
VnClassMember.fk2=ALTER TABLE %VnClassMember.table% ADD CONSTRAINT fk_%VnClassMember.table%_vnwordid FOREIGN KEY (vnwordid) REFERENCES %VnWord.table% (vnwordid);
VnClassMember.no-fk2=ALTER TABLE %VnClassMember.table% DROP CONSTRAINT fk_%VnClassMember.table%_vnwordid CASCADE;
VnClassMember.insert=INSERT INTO %VnClassMember.table% (classid,vnwordid) VALUES (?,?);
VnClassMember.select=SELECT classid,vnwordid FROM %VnClassMember.table% WHERE classid = ? AND vnwordid = ?;

VnClassMemberSense.table=vnclassmembersenses
VnClassMemberSense.create=CREATE TABLE IF NOT EXISTS %VnClassMemberSense.table% (classid INTEGER NOT NULL,vnwordid INTEGER NOT NULL DEFAULT 0,sensenum INTEGER NOT NULL DEFAULT 0,synsetid INTEGER DEFAULT NULL,sensekey VARCHAR (100) DEFAULT NULL,quality FLOAT NOT NULL,PRIMARY KEY (classid,vnwordid,sensenum));
VnClassMemberSense.pk=ALTER TABLE %VnClassMemberSense.table% ADD CONSTRAINT pk_%VnClassMemberSense.table% PRIMARY KEY (classid,vnwordid,sensenum);
VnClassMemberSense.no-pk=ALTER TABLE %VnClassMemberSense.table% DROP CONSTRAINT pk_%VnClassMemberSense.table% CASCADE;
VnClassMemberSense.index1=CREATE INDEX IF NOT EXISTS k_%VnClassMemberSense.table%_classid ON %VnClassMemberSense.table% (classid);
VnClassMemberSense.no-index1=DROP INDEX IF EXISTS k_%VnClassMemberSense.table%_classid;
VnClassMemberSense.index2=CREATE INDEX IF NOT EXISTS k_%VnClassMemberSense.table%_vnwordid ON %VnClassMemberSense.table% (vnwordid);
VnClassMemberSense.no-index2=DROP INDEX IF EXISTS k_%VnClassMemberSense.table%_vnwordid;
VnClassMemberSense.index3=CREATE INDEX IF NOT EXISTS k_%VnClassMemberSense.table%_synsetid ON %VnClassMemberSense.table% (synsetid);
VnClassMemberSense.no-index3=DROP INDEX IF EXISTS k_%VnClassMemberSense.table%_synsetid;
VnClassMemberSense.index4=CREATE INDEX IF NOT EXISTS k_%VnClassMemberSense.table%_sensekey ON %VnClassMemberSense.table% (sensekey);
VnClassMemberSense.no-index4=DROP INDEX IF EXISTS k_%VnClassMemberSense.table%_sensekey;
VnClassMemberSense.fk1=ALTER TABLE %VnClassMemberSense.table% ADD CONSTRAINT fk_%VnClassMemberSense.table%_classid FOREIGN KEY (classid) REFERENCES %VnClass.table% (classid);
VnClassMemberSense.no-fk1=ALTER TABLE %VnClassMemberSense.table% DROP CONSTRAINT fk_%VnClassMemberSense.table%_classid CASCADE;
VnClassMemberSense.fk2=ALTER TABLE %VnClassMemberSense.table% ADD CONSTRAINT fk_%VnClassMemberSense.table%_vnwordid FOREIGN KEY (vnwordid) REFERENCES %VnWord.table% (vnwordid);
VnClassMemberSense.no-fk2=ALTER TABLE %VnClassMemberSense.table% DROP CONSTRAINT fk_%VnClassMemberSense.table%_vnwordid CASCADE;
VnClassMemberSense.insert=INSERT INTO %VnClassMemberSense.table% (classid,vnwordid,sensenum,synsetid,sensekey,quality) VALUES (?,?,?,?,?,?);
VnClassMemberSense.select=SELECT classid,vnwordid,sensenum,synsetid,sensekey FROM %VnClassMemberSense.table% WHERE classid = ? AND vnwordid = ? AND (synsetid IS NULL OR synsetid = ?);

VnGrouping.table=vngroupings
VnGrouping.create=CREATE TABLE IF NOT EXISTS %VnGrouping.table% (groupingid INTEGER NOT NULL,`grouping` VARCHAR (64) NOT NULL,PRIMARY KEY (groupingid));
VnGrouping.pk=ALTER TABLE %VnGrouping.table% ADD CONSTRAINT pk_%VnGrouping.table% PRIMARY KEY (groupingid);
VnGrouping.no-pk=ALTER TABLE %VnGrouping.table% DROP CONSTRAINT pk_%VnGrouping.table% CASCADE;
VnGrouping.unq=CREATE UNIQUE INDEX IF NOT EXISTS unq_%VnGrouping.table%_grouping ON %VnGrouping.table% (`grouping`);
VnGrouping.no-unq=DROP INDEX IF EXISTS unq_%VnGrouping.table%_grouping;
VnGrouping.insert=INSERT INTO %VnGrouping.table% (groupingid,`grouping`) VALUES (?,?);

VnGroupingMap.table=vngroupingmaps
VnGroupingMap.create=CREATE TABLE IF NOT EXISTS %VnGroupingMap.table% (groupingmapid INTEGER NOT NULL,classid INTEGER NOT NULL,vnwordid INTEGER NOT NULL,groupingid INTEGER NOT NULL,PRIMARY KEY (groupingmapid));
VnGroupingMap.pk=ALTER TABLE %VnGroupingMap.table% ADD CONSTRAINT pk_%VnGroupingMap.table% PRIMARY KEY (groupingmapid);
VnGroupingMap.no-pk=ALTER TABLE %VnGroupingMap.table% DROP CONSTRAINT pk_%VnGroupingMap.table% CASCADE;
VnGroupingMap.index1=CREATE INDEX IF NOT EXISTS k_%VnGroupingMap.table%_classid ON %VnGroupingMap.table% (classid);
VnGroupingMap.no-index1=DROP INDEX IF EXISTS k_%VnGroupingMap.table%_classid;
VnGroupingMap.index2=CREATE INDEX IF NOT EXISTS k_%VnGroupingMap.table%_vnwordid ON %VnGroupingMap.table% (vnwordid);
VnGroupingMap.no-index2=DROP INDEX IF EXISTS k_%VnGroupingMap.table%_vnwordid;
VnGroupingMap.index3=CREATE INDEX IF NOT EXISTS k_%VnGroupingMap.table%_groupingid ON %VnGroupingMap.table% (groupingid);
VnGroupingMap.no-index3=DROP INDEX IF EXISTS k_%VnGroupingMap.table%_groupingid;
VnGroupingMap.fk1=ALTER TABLE %VnGroupingMap.table% ADD CONSTRAINT fk_%VnGroupingMap.table%_classid FOREIGN KEY (classid) REFERENCES %VnClass.table% (classid);
VnGroupingMap.no-fk1=ALTER TABLE %VnGroupingMap.table% DROP CONSTRAINT fk_%VnGroupingMap.table%_classid CASCADE;
VnGroupingMap.fk2=ALTER TABLE %VnGroupingMap.table% ADD CONSTRAINT fk_%VnGroupingMap.table%_vnwordid FOREIGN KEY (vnwordid) REFERENCES %VnWord.table% (vnwordid);
VnGroupingMap.no-fk2=ALTER TABLE %VnGroupingMap.table% DROP CONSTRAINT fk_%VnGroupingMap.table%_vnwordid CASCADE;
VnGroupingMap.fk3=ALTER TABLE %VnGroupingMap.table% ADD CONSTRAINT fk_%VnGroupingMap.table%_groupingid FOREIGN KEY (groupingid) REFERENCES %VnGrouping.table% (groupingid);
VnGroupingMap.no-fk3=ALTER TABLE %VnGroupingMap.table% DROP CONSTRAINT fk_%VnGroupingMap.table%_groupingid CASCADE;
VnGroupingMap.insert=INSERT INTO %VnGroupingMap.table% (groupingmapid,classid,vnwordid,groupingid) VALUES (?,?,?,?);
VnGroupingMap.select=SELECT groupingmapid FROM %VnGroupingMap.table% WHERE classid = ? AND vnwordid = ? AND groupingid = ?;

VnRole.table=vnroles
VnRole.create=CREATE TABLE IF NOT EXISTS %VnRole.table% (roleid INTEGER NOT NULL,roletypeid INTEGER NOT NULL,restrsid INTEGER NULL,PRIMARY KEY (roleid));
VnRole.pk=ALTER TABLE %VnRole.table% ADD CONSTRAINT pk_%VnRole.table% PRIMARY KEY (roleid);
VnRole.no-pk=ALTER TABLE %VnRole.table% DROP CONSTRAINT pk_%VnRole.table% CASCADE;
VnRole.unq=CREATE UNIQUE INDEX IF NOT EXISTS unq_%VnRole.table%_roletypeid_restrsid ON %VnRole.table% (roletypeid,restrsid);
VnRole.no-unq=DROP INDEX IF EXISTS unq_%VnRole.table%_roletypeid_restrsid;
VnRole.index1=CREATE INDEX IF NOT EXISTS k_%VnRole.table%_roletypeid ON %VnRole.table% (roletypeid);
VnRole.no-index1=DROP INDEX IF EXISTS k_%VnRole.table%_roletypeid;
VnRole.index2=CREATE INDEX IF NOT EXISTS k_%VnRole.table%_restrsid ON %VnRole.table% (restrsid);
VnRole.no-index2=DROP INDEX IF EXISTS k_%VnRole.table%_restrsid;
VnRole.fk1=ALTER TABLE %VnRole.table% ADD CONSTRAINT fk_%VnRole.table%_roletypeid FOREIGN KEY (roletypeid) REFERENCES %VnRoleType.table% (roletypeid);
VnRole.no-fk1=ALTER TABLE %VnRole.table% DROP CONSTRAINT fk_%VnRole.table%_roletypeid CASCADE;
VnRole.fk2=ALTER TABLE %VnRole.table% ADD CONSTRAINT fk_%VnRole.table%_restrsid FOREIGN KEY (restrsid) REFERENCES %VnRestrs.table% (restrsid);
VnRole.no-fk2=ALTER TABLE %VnRole.table% DROP CONSTRAINT fk_%VnRole.table%_restrsid CASCADE;
VnRole.insert=INSERT INTO %VnRole.table% (roleid,roletypeid,restrsid) VALUES (?,?,?);

VnRoleMap.table=vnrolemaps
VnRoleMap.create=CREATE TABLE IF NOT EXISTS %VnRoleMap.table% (rolemapid INTEGER NOT NULL,roleid INTEGER NOT NULL,classid INTEGER NOT NULL,PRIMARY KEY (rolemapid));
VnRoleMap.pk=ALTER TABLE %VnRoleMap.table% ADD CONSTRAINT pk_%VnRoleMap.table% PRIMARY KEY (rolemapid);
VnRoleMap.no-pk=ALTER TABLE %VnRoleMap.table% DROP CONSTRAINT pk_%VnRoleMap.table% CASCADE;
VnRoleMap.unq=CREATE UNIQUE INDEX IF NOT EXISTS unq_%VnRoleMap.table%_roleid_classid ON %VnRoleMap.table% (roleid,classid);
VnRoleMap.no-unq=DROP INDEX IF EXISTS unq_%VnRoleMap.table%_roleid_classid;
VnRoleMap.index1=CREATE INDEX IF NOT EXISTS k_%VnRoleMap.table%_roleid ON %VnRoleMap.table% (roleid);
VnRoleMap.no-index1=DROP INDEX IF EXISTS k_%VnRoleMap.table%_roleid;
VnRoleMap.index2=CREATE INDEX IF NOT EXISTS k_%VnRoleMap.table%_classid ON %VnRoleMap.table% (classid);
VnRoleMap.no-index2=DROP INDEX IF EXISTS k_%VnRoleMap.table%_classid;
VnRoleMap.fk1=ALTER TABLE %VnRoleMap.table% ADD CONSTRAINT fk_%VnRoleMap.table%_roleid FOREIGN KEY (roleid) REFERENCES %VnRole.table% (roleid);
VnRoleMap.no-fk1=ALTER TABLE %VnRoleMap.table% DROP CONSTRAINT fk_%VnRoleMap.table%_roleid CASCADE;
VnRoleMap.fk2=ALTER TABLE %VnRoleMap.table% ADD CONSTRAINT fk_%VnRoleMap.table%_classid FOREIGN KEY (classid) REFERENCES %VnClass.table% (classid);
VnRoleMap.no-fk2=ALTER TABLE %VnRoleMap.table% DROP CONSTRAINT fk_%VnRoleMap.table%_classid CASCADE;
VnRoleMap.insert=INSERT INTO %VnRoleMap.table% (rolemapid,roleid,classid) VALUES (?,?,?);
VnRoleMap.select=SELECT rolemapid FROM %VnRoleMap.table% WHERE roleid = ? AND classid = ?;

VnRoleType.table=vnroletypes
VnRoleType.create=CREATE TABLE IF NOT EXISTS %VnRoleType.table% (roletypeid INTEGER NOT NULL,roletype VARCHAR (32) NOT NULL,PRIMARY KEY (roletypeid));
VnRoleType.pk=ALTER TABLE %VnRoleType.table% ADD CONSTRAINT pk_%VnRoleType.table% PRIMARY KEY (roletypeid);
VnRoleType.no-pk=ALTER TABLE %VnRoleType.table% DROP CONSTRAINT pk_%VnRoleType.table% CASCADE;
VnRoleType.unq=CREATE UNIQUE INDEX IF NOT EXISTS unq_%VnRoleType.table%_roletype ON %VnRoleType.table% (roletype);
VnRoleType.no-unq=DROP INDEX IF EXISTS unq_%VnRoleType.table%_roletype;
VnRoleType.insert=INSERT INTO %VnRoleType.table% (roletypeid,roletype) VALUES (?,?);

VnRestrs.table=vnrestrs
VnRestrs.create=CREATE TABLE IF NOT EXISTS %VnRestrs.table% (restrsid INTEGER NOT NULL,restrs TEXT NOT NULL,issyn BOOLEAN NOT NULL DEFAULT FALSE,PRIMARY KEY (restrsid));
VnRestrs.pk=ALTER TABLE %VnRestrs.table% ADD CONSTRAINT pk_%VnRestrs.table% PRIMARY KEY (restrsid);
VnRestrs.no-pk=ALTER TABLE %VnRestrs.table% DROP CONSTRAINT pk_%VnRestrs.table% CASCADE;
VnRestrs.unq=CREATE UNIQUE INDEX IF NOT EXISTS unq_%VnRestrs.table%_restrs ON %VnRestrs.table% (restrs,issyn);
VnRestrs.no-unq=DROP INDEX IF EXISTS unq_%VnRestrs.table%_restrs;
VnRestrs.insert=INSERT INTO %VnRestrs.table% (restrsid,restrs,issyn) VALUES (?,?,?);

VnRestrType.table=vnrestrtypes
VnRestrType.create=CREATE TABLE IF NOT EXISTS %VnRestrType.table% (restrid INTEGER NOT NULL,restrval VARCHAR (32) NOT NULL,restr VARCHAR (32) NOT NULL,issyn BOOLEAN NOT NULL DEFAULT FALSE,PRIMARY KEY (restrid));
VnRestrType.pk=ALTER TABLE %VnRestrType.table% ADD CONSTRAINT pk_%VnRestrType.table% PRIMARY KEY (restrid);
VnRestrType.no-pk=ALTER TABLE %VnRestrType.table% DROP CONSTRAINT pk_%VnRestrType.table% CASCADE;
VnRestrType.unq=CREATE UNIQUE INDEX IF NOT EXISTS unq_%VnRestrType.table%_restrval_restr ON %VnRestrType.table% (restrval,restr,issyn);
VnRestrType.no-unq=DROP INDEX IF EXISTS unq_%VnRestrType.table%_restrval_restr;
VnRestrType.insert=INSERT INTO %VnRestrType.table% (restrid,restrval,restr,issyn) VALUES (?,?,?,?);

VnFrame.table=vnframes
VnFrame.create=CREATE TABLE IF NOT EXISTS %VnFrame.table% (frameid INTEGER NOT NULL,number VARCHAR (16) NULL,xtag VARCHAR (16) NULL,nameid INTEGER NOT NULL,subnameid INTEGER NOT NULL,syntaxid INTEGER NOT NULL,semanticsid INTEGER NOT NULL,PRIMARY KEY (frameid));
VnFrame.pk=ALTER TABLE %VnFrame.table% ADD CONSTRAINT pk_%VnFrame.table% PRIMARY KEY (frameid);
VnFrame.no-pk=ALTER TABLE %VnFrame.table% DROP CONSTRAINT pk_%VnFrame.table% CASCADE;
VnFrame.unq=CREATE UNIQUE INDEX IF NOT EXISTS unq_%VnFrame.table%_number_xtag_nameid_subnameid_syntaxid_semanticsid ON %VnFrame.table% (number,xtag,nameid,subnameid,syntaxid,semanticsid);
VnFrame.no-unq=DROP INDEX IF EXISTS unq_%VnFrame.table%_number_xtag_nameid_subnameid_syntaxid_semanticsid;
VnFrame.index1=CREATE INDEX IF NOT EXISTS k_%VnFrame.table%_nameid ON %VnFrame.table% (nameid);
VnFrame.no-index1=DROP INDEX IF EXISTS k_%VnFrame.table%_nameid;
VnFrame.index2=CREATE INDEX IF NOT EXISTS k_%VnFrame.table%_subnameid ON %VnFrame.table% (subnameid);
VnFrame.no-index2=DROP INDEX IF EXISTS k_%VnFrame.table%_subnameid;
VnFrame.index3=CREATE INDEX IF NOT EXISTS k_%VnFrame.table%_syntaxid ON %VnFrame.table% (syntaxid);
VnFrame.no-index3=DROP INDEX IF EXISTS k_%VnFrame.table%_syntaxid;
VnFrame.index4=CREATE INDEX IF NOT EXISTS k_%VnFrame.table%_semanticsid ON %VnFrame.table% (semanticsid);
VnFrame.no-index4=DROP INDEX IF EXISTS k_%VnFrame.table%_semanticsid;
VnFrame.fk1=ALTER TABLE %VnFrame.table% ADD CONSTRAINT fk_%VnFrame.table%_nameid FOREIGN KEY (nameid) REFERENCES %VnFrameName.table% (nameid);
VnFrame.no-fk1=ALTER TABLE %VnFrame.table% DROP CONSTRAINT fk_%VnFrame.table%_nameid CASCADE;
VnFrame.fk2=ALTER TABLE %VnFrame.table% ADD CONSTRAINT fk_%VnFrame.table%_subnameid FOREIGN KEY (subnameid) REFERENCES %VnFrameSubName.table% (subnameid);
VnFrame.no-fk2=ALTER TABLE %VnFrame.table% DROP CONSTRAINT fk_%VnFrame.table%_subnameid CASCADE;
VnFrame.fk3=ALTER TABLE %VnFrame.table% ADD CONSTRAINT fk_%VnFrame.table%_syntaxid FOREIGN KEY (syntaxid) REFERENCES %VnSyntax.table% (syntaxid);
VnFrame.no-fk3=ALTER TABLE %VnFrame.table% DROP CONSTRAINT fk_%VnFrame.table%_syntaxid CASCADE;
VnFrame.fk4=ALTER TABLE %VnFrame.table% ADD CONSTRAINT fk_%VnFrame.table%_semanticsid FOREIGN KEY (semanticsid) REFERENCES %VnSemantics.table% (semanticsid);
VnFrame.no-fk4=ALTER TABLE %VnFrame.table% DROP CONSTRAINT fk_%VnFrame.table%_semanticsid CASCADE;
VnFrame.insert=INSERT INTO %VnFrame.table% (frameid,number,xtag,nameid,subnameid,syntaxid,semanticsid) VALUES (?,?,?,?,?,?,?);

VnFrameMap.table=vnframemaps
VnFrameMap.create=CREATE TABLE IF NOT EXISTS %VnFrameMap.table% (framemapid INTEGER NOT NULL,classid INTEGER NOT NULL,frameid INTEGER NOT NULL,PRIMARY KEY (framemapid));
VnFrameMap.pk=ALTER TABLE %VnFrameMap.table% ADD CONSTRAINT pk_%VnFrameMap.table% PRIMARY KEY (framemapid);
VnFrameMap.no-pk=ALTER TABLE %VnFrameMap.table% DROP CONSTRAINT pk_%VnFrameMap.table% CASCADE;
VnFrameMap.unq=CREATE UNIQUE INDEX IF NOT EXISTS unq_%VnFrameMap.table%_classid_frameid ON %VnFrameMap.table% (classid,frameid);
VnFrameMap.no-unq=DROP INDEX IF EXISTS unq_%VnFrameMap.table%_classid_frameid;
VnFrameMap.index1=CREATE INDEX IF NOT EXISTS k_%VnFrameMap.table%_classid ON %VnFrameMap.table% (classid);
VnFrameMap.no-index1=DROP INDEX IF EXISTS k_%VnFrameMap.table%_classid;
VnFrameMap.index2=CREATE INDEX IF NOT EXISTS k_%VnFrameMap.table%_frameid ON %VnFrameMap.table% (frameid);
VnFrameMap.no-index2=DROP INDEX IF EXISTS k_%VnFrameMap.table%_frameid;
VnFrameMap.fk1=ALTER TABLE %VnFrameMap.table% ADD CONSTRAINT fk_%VnFrameMap.table%_classid FOREIGN KEY (classid) REFERENCES %VnClass.table% (classid);
VnFrameMap.no-fk1=ALTER TABLE %VnFrameMap.table% DROP CONSTRAINT fk_%VnFrameMap.table%_classid CASCADE;
VnFrameMap.fk2=ALTER TABLE %VnFrameMap.table% ADD CONSTRAINT fk_%VnFrameMap.table%_frameid FOREIGN KEY (frameid) REFERENCES %VnFrame.table% (frameid);
VnFrameMap.no-fk2=ALTER TABLE %VnFrameMap.table% DROP CONSTRAINT fk_%VnFrameMap.table%_frameid CASCADE;
VnFrameMap.insert=INSERT INTO %VnFrameMap.table% (framemapid,classid,frameid) VALUES (?,?,?);
VnFrameMap.select=SELECT framemapid FROM %VnFrameMap.table% WHERE classid = ? AND frameid= ?;

VnFrameName.table=vnframenames
VnFrameName.create=CREATE TABLE IF NOT EXISTS %VnFrameName.table% (nameid INTEGER NOT NULL,framename VARCHAR (64) NOT NULL,PRIMARY KEY (nameid));
VnFrameName.pk=ALTER TABLE %VnFrameName.table% ADD CONSTRAINT pk_%VnFrameName.table% PRIMARY KEY (nameid);
VnFrameName.no-pk=ALTER TABLE %VnFrameName.table% DROP CONSTRAINT pk_%VnFrameName.table% CASCADE;
VnFrameName.unq=CREATE UNIQUE INDEX IF NOT EXISTS unq_%VnFrameName.table%_framename ON %VnFrameName.table% (framename);
VnFrameName.no-unq=DROP INDEX IF EXISTS unq_%VnFrameName.table%_framename;
VnFrameName.insert=INSERT INTO %VnFrameName.table% (nameid,framename) VALUES (?,?);

VnFrameSubName.table=vnframesubnames
VnFrameSubName.create=CREATE TABLE IF NOT EXISTS %VnFrameSubName.table% (subnameid INTEGER NOT NULL,framesubname VARCHAR (64) NOT NULL,PRIMARY KEY (subnameid));
VnFrameSubName.pk=ALTER TABLE %VnFrameSubName.table% ADD CONSTRAINT pk_%VnFrameSubName.table% PRIMARY KEY (subnameid);
VnFrameSubName.no-pk=ALTER TABLE %VnFrameSubName.table% DROP CONSTRAINT pk_%VnFrameSubName.table% CASCADE;
VnFrameSubName.unq=CREATE UNIQUE INDEX IF NOT EXISTS unq_%VnFrameSubName.table%_framesubname ON %VnFrameSubName.table% (framesubname);
VnFrameSubName.no-unq=DROP INDEX IF EXISTS unq_%VnFrameSubName.table%_framesubname;
VnFrameSubName.insert=INSERT INTO %VnFrameSubName.table% (subnameid,framesubname) VALUES (?,?);

VnSyntax.table=vnsyntaxes
VnSyntax.create=CREATE TABLE IF NOT EXISTS %VnSyntax.table% (syntaxid INTEGER NOT NULL,syntax TEXT NOT NULL,PRIMARY KEY (syntaxid));
VnSyntax.pk=ALTER TABLE %VnSyntax.table% ADD CONSTRAINT pk_%VnSyntax.table% PRIMARY KEY (syntaxid);
VnSyntax.no-pk=ALTER TABLE %VnSyntax.table% DROP CONSTRAINT pk_%VnSyntax.table% CASCADE;
VnSyntax.unq=CREATE UNIQUE INDEX IF NOT EXISTS unq_%VnSyntax.table%_syntax ON %VnSyntax.table% (syntax);
VnSyntax.no-unq=DROP INDEX IF EXISTS unq_%VnSyntax.table%_syntax;
VnSyntax.insert=INSERT INTO %VnSyntax.table% (syntaxid,syntax) VALUES (?,?);

VnSemantics.table=vnsemantics
VnSemantics.create=CREATE TABLE IF NOT EXISTS %VnSemantics.table% (semanticsid INTEGER NOT NULL,semantics TEXT NOT NULL,PRIMARY KEY (semanticsid));
VnSemantics.pk=ALTER TABLE %VnSemantics.table% ADD CONSTRAINT pk_%VnSemantics.table% PRIMARY KEY (semanticsid);
VnSemantics.no-pk=ALTER TABLE %VnSemantics.table% DROP CONSTRAINT pk_%VnSemantics.table% CASCADE;
VnSemantics.unq=CREATE UNIQUE INDEX IF NOT EXISTS unq_%VnSemantics.table%_semantics ON %VnSemantics.table% (semantics);
VnSemantics.no-unq=DROP INDEX IF EXISTS unq_%VnSemantics.table%_semantics;
VnSemantics.insert=INSERT INTO %VnSemantics.table% (semanticsid,semantics) VALUES (?,?);

VnPredicate.table=vnpredicates
VnPredicate.create=CREATE TABLE IF NOT EXISTS %VnPredicate.table% (predid INTEGER NOT NULL,pred VARCHAR (128) NOT NULL,PRIMARY KEY (predid));
VnPredicate.pk=ALTER TABLE %VnPredicate.table% ADD CONSTRAINT pk_%VnPredicate.table% PRIMARY KEY (predid);
VnPredicate.no-pk=ALTER TABLE %VnPredicate.table% DROP CONSTRAINT pk_%VnPredicate.table% CASCADE;
VnPredicate.unq=CREATE UNIQUE INDEX IF NOT EXISTS unq_%VnPredicate.table%_pred ON %VnPredicate.table% (pred);
VnPredicate.no-unq=DROP INDEX IF EXISTS unq_%VnPredicate.table%_pred;
VnPredicate.insert=INSERT INTO %VnPredicate.table% (predid,pred) VALUES (?,?);

VnPredicateMap.table=vnpredicatemaps
VnPredicateMap.create=CREATE TABLE IF NOT EXISTS %VnPredicateMap.table% (semanticsid INTEGER NOT NULL,predid INTEGER NOT NULL,PRIMARY KEY (semanticsid,predid));
VnPredicateMap.pk=ALTER TABLE %VnPredicateMap.table% ADD CONSTRAINT pk_%VnPredicateMap.table% PRIMARY KEY (semanticsid,predid);
VnPredicateMap.no-pk=ALTER TABLE %VnPredicateMap.table% DROP CONSTRAINT pk_%VnPredicateMap.table% CASCADE;
VnPredicateMap.index1=CREATE INDEX IF NOT EXISTS k_%VnPredicateMap.table%_semanticsid ON %VnPredicateMap.table% (semanticsid);
VnPredicateMap.no-index1=DROP INDEX IF EXISTS k_%VnPredicateMap.table%_semanticsid;
VnPredicateMap.index2=CREATE INDEX IF NOT EXISTS k_%VnPredicateMap.table%_predid ON %VnPredicateMap.table% (predid);
VnPredicateMap.no-index2=DROP INDEX IF EXISTS k_%VnPredicateMap.table%_predid;
VnPredicateMap.fk1=ALTER TABLE %VnPredicateMap.table% ADD CONSTRAINT fk_%VnPredicateMap.table%_semanticsid FOREIGN KEY (semanticsid) REFERENCES %VnSemantics.table% (semanticsid);
VnPredicateMap.no-fk1=ALTER TABLE %VnPredicateMap.table% DROP CONSTRAINT fk_%VnPredicateMap.table%_semanticsid CASCADE;
VnPredicateMap.fk2=ALTER TABLE %VnPredicateMap.table% ADD CONSTRAINT fk_%VnPredicateMap.table%_predid FOREIGN KEY (predid) REFERENCES %VnPredicate.table% (predid);
VnPredicateMap.no-fk2=ALTER TABLE %VnPredicateMap.table% DROP CONSTRAINT fk_%VnPredicateMap.table%_predid CASCADE;
VnPredicateMap.insert=INSERT INTO %VnPredicateMap.table% (semanticsid,predid) VALUES (?,?);

VnExample.table=vnexamples
VnExample.create=CREATE TABLE IF NOT EXISTS %VnExample.table% (exampleid INTEGER NOT NULL,example VARCHAR (128) NOT NULL,PRIMARY KEY (exampleid));
VnExample.pk=ALTER TABLE %VnExample.table% ADD CONSTRAINT pk_%VnExample.table% PRIMARY KEY (exampleid);
VnExample.no-pk=ALTER TABLE %VnExample.table% DROP CONSTRAINT pk_%VnExample.table% CASCADE;
VnExample.unq=CREATE UNIQUE INDEX IF NOT EXISTS unq_%VnExample.table%_example ON %VnExample.table% (example);
VnExample.no-unq=DROP INDEX IF EXISTS unq_%VnExample.table%_example;
VnExample.insert=INSERT INTO %VnExample.table% (exampleid,example) VALUES (?,?);

VnExampleMap.table=vnexamplemaps
VnExampleMap.create=CREATE TABLE IF NOT EXISTS %VnExampleMap.table% (frameid INTEGER NOT NULL,exampleid INTEGER NOT NULL,PRIMARY KEY (frameid,exampleid));
VnExampleMap.pk=ALTER TABLE %VnExampleMap.table% ADD CONSTRAINT pk_%VnExampleMap.table% PRIMARY KEY (frameid,exampleid);
VnExampleMap.no-pk=ALTER TABLE %VnExampleMap.table% DROP CONSTRAINT pk_%VnExampleMap.table% CASCADE;
VnExampleMap.index1=CREATE INDEX IF NOT EXISTS k_%VnExampleMap.table%_frameid ON %VnExampleMap.table% (frameid);
VnExampleMap.no-index1=DROP INDEX IF EXISTS k_%VnExampleMap.table%_frameid;
VnExampleMap.index2=CREATE INDEX IF NOT EXISTS k_%VnExampleMap.table%_exampleid ON %VnExampleMap.table% (exampleid);
VnExampleMap.no-index2=DROP INDEX IF EXISTS k_%VnExampleMap.table%_exampleid;
VnExampleMap.fk1=ALTER TABLE %VnExampleMap.table% ADD CONSTRAINT fk_%VnExampleMap.table%_frameid FOREIGN KEY (frameid) REFERENCES %VnFrame.table% (frameid);
VnExampleMap.no-fk1=ALTER TABLE %VnExampleMap.table% DROP CONSTRAINT fk_%VnExampleMap.table%_frameid CASCADE;
VnExampleMap.fk2=ALTER TABLE %VnExampleMap.table% ADD CONSTRAINT fk_%VnExampleMap.table%_exampleid FOREIGN KEY (exampleid) REFERENCES %VnExample.table% (exampleid);
VnExampleMap.no-fk2=ALTER TABLE %VnExampleMap.table% DROP CONSTRAINT fk_%VnExampleMap.table%_exampleid CASCADE;
VnExampleMap.insert=INSERT INTO %VnExampleMap.table% (frameid,exampleid) VALUES (?,?);

VnWord.table=vnwords
VnWord.create=CREATE TABLE IF NOT EXISTS %VnWord.table% (vnwordid INTEGER NOT NULL,wordid INTEGER NULL,lemma VARCHAR(80) DEFAULT NULL,PRIMARY KEY (vnwordid));
VnWord.pk=ALTER TABLE %VnWord.table% ADD CONSTRAINT pk_%VnWord.table% PRIMARY KEY (vnwordid);
VnWord.no-pk=ALTER TABLE %VnWord.table% DROP CONSTRAINT pk_%VnWord.table% CASCADE;
VnWord.unq1=CREATE UNIQUE INDEX IF NOT EXISTS unq_%VnWord.table%_lemma ON %VnWord.table% (lemma);
VnWord.no-unq1=DROP INDEX IF EXISTS unq_%VnWord.table%_lemma;
VnWord.fk1=ALTER TABLE %VnWord.table% ADD CONSTRAINT fk_%VnWord.table%_wordid FOREIGN KEY (wordid) REFERENCES %Word.table% (wordid);
VnWord.no-fk1=ALTER TABLE %VnWord.table% DROP CONSTRAINT fk_%VnWord.table%_wordid CASCADE;
VnWord.insert=INSERT INTO %VnWord.table% (vnwordid,wordid,lemma) VALUES(?,?,?);
VnWord.select=SELECT vnwordid FROM %VnWord.table% WHERE lemma = ?;

Vn.SenseMap.select=SELECT %LegacySenseMap.table.base%$XY$.synsetid,%LegacySense.table.base%$X$.sensekey FROM %LegacySenseMap.table.base%$XY$ INNER JOIN %LegacySense.table.base%$X$ ON %LegacySenseMap.table.base%$XY$.srcsynsetid = %LegacySense.table.base%$X$.synsetid WHERE %LegacySense.table.base%$X$.sensekey LIKE ? ESCAPE '/';
Vn.SynsetMap.select=SELECT %LegacySynsetMap.table.base%$XY$.synsetid,%LegacySense.table.base%$X$.sensekey FROM %LegacySynsetMap.table.base%$XY$ INNER JOIN %LegacySense.table.base%$X$ ON %LegacySynsetMap.table.base%$XY$.srcsynsetid = %LegacySense.table.base%$X$.synsetid WHERE %LegacySense.table.base%$X$.sensekey LIKE ? ESCAPE '/';
Vn.Sense.select=SELECT %Sense.table%$X$.synsetid,%Sense.table%$X$.sensekey FROM %Sense.table%$X$ WHERE %Sense.table%$X$.sensekey LIKE ? ESCAPE '/';
